{"version":3,"sources":["webpack:///./src/app/search/article-list/article-list.component.ts","webpack:///./src/app/search/search-form/search-form.component.ts","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/search/search.module.ts","webpack:///./src/app/search/search.service.ts"],"names":[],"mappings":"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","file":"search-search-module.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-article-list',\n    template: `\n        <mat-list>\n            <mat-list-item *ngFor=\"let article of this.articles\" [routerLink]=\"'/app/article/' + article.language + '/' + article.title\">\n                {{ article.title }}\n            </mat-list-item>\n        </mat-list>\n    `,\n    styles: [`\n        :host {\n            width: 100%;\n            position: absolute;\n            bottom: 0px;\n            top: 146px;\n            overflow: auto;\n        }\n        mat-list-item {\n            cursor: pointer;\n            outline: none;\n            border-bottom: 1px solid #ddd;\n        }\n        mat-list-item:hover {\n            background: #ddd;\n        }\n    `]\n})\nexport class ArticleListComponent {\n    @Input() articles: string[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-search-form',\n    template: `\n        <ng-content></ng-content>\n        <mat-form-field>\n            <input\n                [(ngModel)]=\"this.title\"\n                (ngModelChange)=\"this.searchArticles.emit(this.title)\"\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Search Articles\"\n                autocorrect=\"off\"\n                autocomplete=\"off\"\n                matInput\n            />\n        </mat-form-field>\n    `,\n    styles: [`\n    :host {\n        display: flex;\n        flex-direction: row;\n        place-items: center;\n        background: #ECEFF1;\n        padding: 16px 16px 0px;\n    }\n        mat-form-field {\n            width: 100%;\n        }\n    `]\n})\nexport class SearchFormComponent {\n    @Input() title: string;\n    @Output() searchArticles = new EventEmitter();\n}\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport { CoreService } from '@core/core.service';\n\nimport { SearchService } from './search.service';\n\n@Component({\n    selector: 'app-search',\n    template: `\n        <app-search-form\n            [title]=\"this.searchService.title$ | async\"\n            (searchArticles)=\"this.searchService.title$.next($event)\"\n            class=\"mat-elevation-z4\"\n        >\n            <button routerLink=\"/app/language\" color=\"primary\" mat-icon-button>\n                <mat-icon>language</mat-icon>\n            </button>\n        </app-search-form>\n        <app-article-list [articles]=\"this.searchService.articles$ | async\"></app-article-list>\n    `,\n    providers: [SearchService]\n})\nexport class SearchComponent implements AfterViewInit {\n    constructor(\n        public coreService: CoreService,\n        public searchService: SearchService\n    ) { }\n\n    ngAfterViewInit() {\n        this.coreService.toolbarTitle$.next('Search');\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { SearchComponent } from './search.component';\nimport { SearchFormComponent } from './search-form/search-form.component';\nimport { ArticleListComponent } from './article-list/article-list.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        RouterModule.forChild([\n            { path: '', component: SearchComponent }\n        ])\n    ],\n    declarations: [\n        SearchComponent,\n        SearchFormComponent,\n        ArticleListComponent\n    ]\n})\nexport class SearchModule { }\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nimport { combineLatest, Subject } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { NgFireService } from '@shared/services';\n\n@Injectable()\nexport class SearchService {\n    title$ = new Subject<string>();\n    language$ = this.angularFireAuth.authState.pipe(\n        switchMap((user: any) => this.ngFireService.loadDocument('users', user.uid)),\n        map((user: any) => user.language || 'en'),\n    );\n    articles$ = combineLatest(this.title$, this.language$).pipe(\n        switchMap(([title, language]: any) =>\n            this.http.get(`https://${ language }.wikipedia.org/w/api.php?action=opensearch&format=json&origin=*&search=${ title }`).pipe(\n                map(articles => articles.json()[1].map(article => Object.assign({}, { language: language, title: article }))),\n            )\n        )\n    );\n\n    constructor(\n        private http: Http,\n        private angularFireAuth: AngularFireAuth,\n        private ngFireService: NgFireService\n    ) { }\n}\n"],"sourceRoot":""}