{"version":3,"sources":["registerServiceWorker.js","login/actions/ResetPassword.Action.js","login/containers/ToolBar.Container.js","login/containers/ResetPassword.Container.js","login/actions/LoginForm.Actions.js","login/containers/LoginForm.Container.js","login/components/LoginLayout.Component.js","create-account/components/ToolBar.Component.js","create-account/actions/CreateAccount.Actions.js","create-account/containers/CreateAccountForm.Container.js","create-account/components/CreateAccountLayout.Component.js","search/actions/SearchForm.Actions.js","sideNav/actions/Drawer.Actions.js","search/containers/SearchForm.Container.js","search/containers/ArticlesList.Container.js","search/components/SearchLayout.Component.js","language/containers/ToolBar.Container.js","language/actions/Language.Actions.js","language/containers/LanguageList.Container.js","language/components/LanguageLayout.Component.js","article/actions/Article.Actions.js","article/containers/ToolBar.Container.js","article/containers/Article.Container.js","article/containers/SaveDialog.Container.js","article/components/ArticleLayout.Component.js","folders/actions/Folders.Actions.js","folders/containers/FoldersList.Container.js","folders/components/FoldersLayout.Component.js","cards/containers/ToolBar.Container.js","cards/actions/Cards.Actions.js","cards/containers/Cards.Container.js","cards/containers/DeleteCard.Container.js","cards/components/CardsLayout.Component.js","account/actions/Account.Actions.js","account/containers/AccountForm.Container.js","account/containers/DeleteAccountDialog.Container.js","account/components/AccountLayout.Component.js","sideNav/containers/ToolBar.Container.js","sideNav/containers/Drawer.Container.js","sideNav/components/SideNavLayout.Component.js","app/actions/App.Actions.js","app/containers/App.Container.js","app/components/App.Component.js","login/reducers/LoginForm.Reducers.js","login/reducers/ResetPassword.Reducer.js","login/reducers/index.js","create-account/reducers/CreateAccountForm.Reducers.js","create-account/reducers/index.js","app/reducers/App.Reducers.js","app/reducers/index.js","sideNav/reducers/SideNav.Reducers.js","sideNav/reducers/index.js","search/reducers/SearchForm.Reducers.js","search/reducers/index.js","language/reducers/Language.Reducers.js","language/reducers/index.js","article/reducers/Article.Reducers.js","article/reducers/index.js","folders/reducers/Folders.Reducers.js","folders/reducers/index.js","cards/reducers/Cards.Reducers.js","cards/reducers/index.js","account/reducers/Account.Reducers.js","account/reducers/index.js","rootReducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","directory","ActionTypes","OPEN_RESET_PASSWORD_DIALOG","concat","CLOSE_RESET_PASSWORD_DIALOG","RESET_PASSWORD_EMAIL_CHANGE","RESET_PASSWORD","resetPassword","_ref","resetPasswordMessage","resetPasswordError","type","payload","styles","appBar","height","flexDirection","alignItems","paddingLeft","justifyContent","lockOpenIcon","color","connect","dispatch","react_default","a","createElement","AppBar_default","style","position","IconButton_default","onClick","LockOpen_default","confirmationMessage","border","fontSize","margin","width","textAlign","errorMessage","maxWidth","ResetPasswordContainer","_this","this","Dialog_default","open","props","resetPasswordDialogOpen","DialogTitle_default","DialogContent_default","Grid_default","spacing","container","item","Email_default","TextField_default","onChange","resetPasswordEmailChange","value","resetPasswordEmail","label","required","DialogActions_default","Button_default","closeResetPasswordDialog","disabled","valid","Component","e","email","target","auth","sendPasswordResetEmail","_","message","INIT","EMAIL_CHANGE","PASSWORD_CHANGE","LOGIN","login","card","display","borderBottomLeftRadius","borderBottomRightRadius","cardHeader","borderBottom","cardContent","gridContainer","marginTop","cardActions","paddingBottom","createAccountBtn","borderTop","LoginFormContainer","init","Card_default","CardHeader_default","title","CardContent_default","emailChange","touched","VpnKey_default","passwordChange","password","isError","CardActions_default","component","Link","to","loginForm","signInWithEmailAndPassword","mainContainer","background","left","right","top","bottom","formContainer","LoginLayout","ToolBar_Container","ResetPassword_Container","LoginForm_Container","ToolBar","CREATE_ACCOUNT","createAccount","CreateAccountFormContainer","createUserWithEmailAndPassword","userData","createUser","firestore","collection","doc","user","uid","set","language","signInUser","Promise","all","CreateAccountLayout","ToolBar_Component","CreateAccountForm_Container","LOAD_LANGUAGE","SEARCH_TITLE","searchTitle","response","TOGGLE_SIDENAV","CLOSE_SIDENAV","UPDATE_TITLE","toggleSideNav","updateTitle","zIndex","textField","padding","gridTextField","flex","SearchFormContainer","loadLanguage","Language_default","searchForm","onAuthStateChanged","get","data","_searchTitle2","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","t0","sent","stop","_x","_x2","apply","arguments","listItem","listItemText","textTransform","ArticlesListContainer","List_default","articles","map","article","i","ListItem_default","key","button","ListItemIcon_default","ListAlt_default","ListItemText_default","primary","SearchLayout","SearchForm_Container","ArticlesList_Container","paddingRight","ArrowBack_default","SELECT_LANGUAGE","cursor","isActive","LanguageListContainer","languages","selectLanguage","languageSelected","lang","currentUser","update","LanguageLayout","containers_ToolBar_Container","LanguageList_Container","CLEAR_ARTICLE","LOAD_ARTICLE","SELECT_SECTION","SAVE_TO_FOLDER","OPEN_DIALOG","CLOSE_DIALOG","LOAD_FOLDERS","NEW_FOLDER_NAME_CHANGE","ADD_NEW_FOLDER","loadArticle","sections","loadFolders","folders","opacity","ToolBarContainer","openDialog","isSelectedList","length","saveIcon","Save_default","marginBottom","sectionHeader","paddingTop","isSaved","isSelectedContent","borderBottomColor","isSelectedActions","ArticleContainer","clearArticle","section","sIndex","paragraphs","header","paragraph","pIndex","isSelected","text","selectSection","fullWidth","_loadArticle2","responseHtml","hash","slice","query","pages","keys","extract","reduce","curr","tmp","document","innerHTML","textContent","innerText","push","sectionIndex","paragraphId","paragraphIndex","replace","list","maxHeight","overflow","listSubheader","dialogActions","SaveDialogContainer","dialogOpen","newFolderName","newFolderNameChange","closeDialog","addNewFolder","subheader","ListSubheader_default","folder","id","saveToFolder","Badge_default","badgeContent","cardsLength","Folder_default","folderName","docRef","trim","userUid","where","onSnapshot","foldersData","docs","sort","b","toLowerCase","batch","newFolder","forEach","selected","cardRef","commit","isSelectedListIds","articleContainer","ArticleLayout","article_containers_ToolBar_Container","Article_Container","SaveDialog_Container","FoldersListContainer","foldersSorted","FoldersLayout","FoldersList_Container","marginRight","cards","LOAD_CARDS","CLEAR_CARDS","PREVIOUS","NEXT","DELETE_CARD","CONFIRM_DELETE_CARD","CLOSE_DELETE_CARD_DIALOG","loadCards","deleteBtn","active","inActive","CardsContainer","clearCards","activeIndex","action","deleteCard","DeleteOutline_default","previous","ArrowForward_default","cardsData","empty","DeleteCardContainer","deleteCardDialogOpen","closeDeleteCardDialog","confirmDeleteCard","deleteCardRef","deletedCardRef","delete","folderRef","CardsLayout","cards_containers_ToolBar_Container","Cards_Container","DeleteCard_Container","RESET_FORM","SAVE_EMAIL","SAVE_PASSWORD","OPEN_DELETE_ACCOUNT_DIALOG","CLOSE_DELETE_ACCOUNT_DIALOG","resetForm","saveEmail","savePassword","placeContent","deleteAccountBtn","AccountFormContainer","openDeleteAccountDialog","account","updateEmail","updatePassword","DeleteAccountDialogContainer","deleteAccountDialogOpen","DialogContentText_default","closeDeleteAccountDialog","deleteAccount","signOut","AccountLayout","AccountForm_Container","DeleteAccountDialog_Container","menuIcon","Menu_default","sideNav","DrawerContainer","closeSideNav","Drawer_default","onClose","Search_default","Divider_default","FolderOutlined_default","PersonOutline_default","logout","PowerSettingsNew_default","innerContainer","SideNavLayout","Drawer_Container","sideNav_containers_ToolBar_Container","Switch","Route","path","CHECK_USER","LoginRoute","objectWithoutProperties","isLoggedIn","Redirect","exact","CreateAccountRoute","_ref2","AppRoute","_ref3","AppContainer","checkUser","hasLoaded","App_Container_LoginRoute","assign","App_Container_CreateAccountRoute","App_Container_AppRoute","from","app","AppComponent","HashRouter","emailPattern","RegExp","undefined","test","reducers","create_account_reducers","app_reducers","sideNav_reducers","search_reducers","language_reducers","article_reducers","toConsumableArray","filter","includes","folders_reducers","cards_reducers","account_reducers","allReducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","render","es","App_Component","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.64e5eadd.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","const directory = 'RESET_PASSWORD_';\n\nexport const ActionTypes = {\n    OPEN_RESET_PASSWORD_DIALOG: `${ directory }OPEN_RESET_PASSWORD_DIALOG`,\n    CLOSE_RESET_PASSWORD_DIALOG: `${ directory }CLOSE_RESET_PASSWORD_DIALOG`,\n    RESET_PASSWORD_EMAIL_CHANGE: `${ directory }RESET_PASSWORD_EMAIL_CHANGE`,\n    RESET_PASSWORD: `${ directory }RESET_PASSWORD`\n};\n\nexport function openResetPasswordDialog() {\n    return { type: ActionTypes.OPEN_RESET_PASSWORD_DIALOG }\n}\n\nexport function closeResetPasswordDialog() {\n    return { type: ActionTypes.CLOSE_RESET_PASSWORD_DIALOG }\n}\n\nexport function resetPasswordEmailChange(email) {\n    return { type: ActionTypes.RESET_PASSWORD_EMAIL_CHANGE, payload: email }\n}\n\nexport function resetPassword({ resetPasswordMessage, resetPasswordError }) {\n    return { type: ActionTypes.RESET_PASSWORD, payload: { resetPasswordMessage, resetPasswordError } }\n}\n","// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Material\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport LockOpen from '@material-ui/icons/LockOpen';\n// Actions\nimport { openResetPasswordDialog } from '../actions/ResetPassword.Action';\n\nconst styles = {\n    appBar: {\n        height: '64px',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: '16px',\n        justifyContent: 'space-between'\n    },\n    lockOpenIcon: {\n        color: 'white'\n    }\n};\n\nconst ToolBarContainer = ({ dispatch }) => (\n    <AppBar style={ styles.appBar } position=\"fixed\" color=\"primary\">\n        Click Wik\n        <IconButton\n            onClick={ () => dispatch(openResetPasswordDialog()) }\n            style={ styles.lockOpenIcon }\n        >\n            <LockOpen />\n        </IconButton>\n    </AppBar>\n)\n\nexport default connect()(ToolBarContainer)\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth } from 'firebase/app';\n// Material\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Email from '@material-ui/icons/Email';\n// Actions\nimport { closeResetPasswordDialog, resetPasswordEmailChange, resetPassword } from '../actions/ResetPassword.Action';\n\nconst styles = {\n    confirmationMessage: {\n        color: 'green',\n        border: '1px solid green',\n        fontSize: '12px',\n        margin: '24px 16px 0px',\n        width: '220px',\n        textAlign: 'center'\n    },\n    errorMessage: {\n        color: 'red',\n        border: '1px solid red',\n        fontSize: '12px',\n        margin: '24px 16px 0px',\n        maxWidth: '220px',\n        textAlign: 'center'\n    }\n};\n\nclass ResetPasswordContainer extends Component {\n    render() {\n        return (\n            <Dialog open={ this.props.resetPasswordDialogOpen }>\n                <DialogTitle>Reset Password</DialogTitle>\n                <DialogContent>\n                    <Grid alignItems=\"flex-end\" spacing={ 8 } container>\n                        <Grid item><Email color=\"action\" /></Grid>\n                        <Grid item>\n                            <TextField\n                                onChange={ this.props.resetPasswordEmailChange }\n                                value={ this.props.resetPasswordEmail.value }\n                                label=\"Email\"\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n                    {\n                        this.props.resetPasswordMessage ?\n                            <Grid alignItems=\"flex-end\" spacing={ 8 } container>\n                                <Grid style={ this.props.resetPasswordError ? styles.errorMessage : styles.confirmationMessage } item>\n                                    <div>{ this.props.resetPasswordMessage }</div>\n                                </Grid>\n                            </Grid>\n                        : null\n                    }                    \n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={ this.props.closeResetPasswordDialog } color=\"secondary\">Close</Button>\n                    <Button\n                        onClick={ () => this.props.resetPassword(this.props.resetPasswordEmail.value) }\n                        disabled={ !this.props.resetPasswordEmail.valid }\n                        color=\"primary\"\n                    >\n                        Send Reset Link\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        resetPasswordDialogOpen: state.resetPassword.resetPasswordDialogOpen,\n        resetPasswordEmail: state.resetPassword.resetPasswordEmail,\n        resetPasswordEmailChange: state.resetPassword.resetPasswordEmailChange,\n        resetPasswordMessage: state.resetPassword.resetPasswordMessage,\n        resetPasswordError: state.resetPassword.resetPasswordError\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        closeResetPasswordDialog: () => { dispatch(closeResetPasswordDialog()) },\n        resetPasswordEmailChange: (e) => { dispatch(resetPasswordEmailChange(e.target.value)) },\n        resetPassword: (email) => {\n            auth().sendPasswordResetEmail(email)\n            .then(_ => dispatch(resetPassword({\n                resetPasswordMessage: 'Reset email sent succesfully.',\n                resetPasswordError: false\n            })))\n            .catch(error => dispatch(resetPassword({\n                resetPasswordMessage: error.message,\n                resetPasswordError: true\n            })))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordContainer);\n","const directory = 'LOGIN_';\n\nexport const ActionTypes = {\n    INIT: `${ directory }INIT`,\n    EMAIL_CHANGE: `${ directory }EMAIL_CHANGE`,\n    PASSWORD_CHANGE: `${ directory }PASSWORD_CHANGE`,\n    LOGIN: `${ directory }LOGIN`,\n};\n\nexport function init() {\n    return { type: ActionTypes.INIT }\n}\n\nexport function emailChange(email) {\n    return { type: ActionTypes.EMAIL_CHANGE, payload: email }\n}\n\nexport function passwordChange(password) {\n    return { type: ActionTypes.PASSWORD_CHANGE, payload: password }\n}\n\nexport function login(error) {\n    return { type: ActionTypes.LOGIN, payload: error }\n}\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Router\nimport { Link } from 'react-router-dom';\n// Firebase\nimport { auth } from 'firebase/app';\n// Material\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Email from '@material-ui/icons/Email';\nimport VpnKey from '@material-ui/icons/VpnKey';\n// Actions\nimport { emailChange, init, passwordChange, login } from '../actions/LoginForm.Actions';\n\nconst styles = {\n    card: {\n        width: '300px',\n        height: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        borderBottomLeftRadius: '0px',\n        borderBottomRightRadius: '0px'\n    },\n    cardHeader: {\n        borderBottom: '1px solid #ddd'\n    },\n    cardContent: {\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexDirection: 'column'\n    },\n    gridContainer: {\n        justifyContent: 'space-evenly',\n        marginTop: '8px'\n    },\n    cardActions: {\n        flexDirection: 'row-reverse',\n        paddingBottom: '24px',\n    },\n    createAccountBtn: {\n        borderTop: '1px solid #ddd',\n        height: '64px',\n        width: '100%'\n    },\n    errorMessage: {\n        color: 'red',\n        border: '1px solid red',\n        fontSize: '12px',\n        margin: '24px 16px 0px',\n        textAlign: 'center'\n    }\n};\n\nclass LoginFormContainer extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        return (\n            <Card style={ styles.card }>\n                <CardHeader title=\"Login\" style={ styles.cardHeader }></CardHeader>\n                <CardContent style={ styles.cardContent }>\n                    <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                        <Grid item><Email color=\"action\" /></Grid>\n                        <Grid item>\n                            <TextField\n                                onChange={ this.props.emailChange }\n                                value={ this.props.email.value }\n                                error={ this.props.email.touched && !this.props.email.valid }\n                                label=\"Email\"\n                                type=\"email\"\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                        <Grid item><VpnKey color=\"action\" /></Grid>\n                        <Grid item>\n                            <TextField\n                                onChange={ this.props.passwordChange }\n                                value={ this.props.password.value }\n                                error={ this.props.password.touched && !this.props.password.valid }\n                                label=\"Password\"\n                                type=\"password\"\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n                    {\n                        this.props.error.isError ?\n                            <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                                <Grid style={ styles.errorMessage } item>\n                                    <div>{ this.props.error.errorMessage }</div>\n                                </Grid>\n                            </Grid>\n                        : null\n                    }\n                </CardContent>\n                <CardActions style={ styles.cardActions }>\n                    <Button\n                        onClick={ () => this.props.login(this.props.email.value, this.props.password.value) }\n                        disabled={ !this.props.email.valid || !this.props.password.valid }\n                        color=\"primary\"\n                    >\n                        Login\n                    </Button>\n                </CardActions>\n                <Button component={ Link } to={ '/create-account' } style={ styles.createAccountBtn }>\n                    Create Account\n                </Button>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.loginForm.error,\n        email: state.loginForm.email,\n        password: state.loginForm.password\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        init: () => { dispatch(init()) },\n        emailChange: (e) => { dispatch(emailChange(e.target.value)) },\n        passwordChange: (e) => { dispatch(passwordChange(e.target.value)) },\n        login: (email, password) => {\n            auth().signInWithEmailAndPassword(email, password)\n            .then(_ => dispatch(login(null)))\n            .catch(error => dispatch(login(error.message)))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);\n","// React\nimport React from 'react';\n// Components\nimport ToolBarContainer from '../containers/ToolBar.Container';\nimport ResetPasswordContainer from '../containers/ResetPassword.Container';\nimport LoginFormContainer from '../containers/LoginForm.Container';\n\nconst styles = {\n    mainContainer: {\n        background: '#eee',\n        position: 'absolute',\n        left: '0px',\n        right: '0px',\n        top: '0px',\n        bottom: '0px'\n    },\n    formContainer: {\n        top: '64px',\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n        alignItems: 'center'\n    }\n};\n\nfunction LoginLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n            <ToolBarContainer />\n            <ResetPasswordContainer />\n\n            <div style={ styles.formContainer }>\n                <LoginFormContainer />\n            </div>\n        </div>\n    )\n}\n\nexport default LoginLayout;","// React\nimport React from 'react';\n// Material\nimport AppBar from '@material-ui/core/AppBar';\n\nconst styles = {\n    appBar: {\n        height: '64px',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: '16px',\n        justifyContent: 'space-between'\n    }\n};\n\nfunction ToolBar() {\n    return (\n        <AppBar style={ styles.appBar } position=\"fixed\" color=\"primary\">\n            Click Wik\n        </AppBar>\n    )\n}\n\nexport default ToolBar;\n","const directory = 'CREATE_ACCOUNT_';\n\nexport const ActionTypes = {\n    INIT: `${ directory }INIT`,\n    EMAIL_CHANGE: `${ directory }EMAIL_CHANGE`,\n    PASSWORD_CHANGE: `${ directory }PASSWORD_CHANGE`,\n    CREATE_ACCOUNT: `${ directory }CREATE_ACCOUNT`,\n};\n\nexport function init() {\n    return { type: ActionTypes.INIT }\n}\n\nexport function emailChange(email) {\n    return { type: ActionTypes.EMAIL_CHANGE, payload: email }\n}\n\nexport function passwordChange(password) {\n    return { type: ActionTypes.PASSWORD_CHANGE, payload: password }\n}\n\nexport function createAccount(error) {\n    return { type: ActionTypes.CREATE_ACCOUNT, payload: error }\n}\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth, firestore } from 'firebase/app';\n// Router\nimport { Link } from 'react-router-dom';\n// Material\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Email from '@material-ui/icons/Email';\nimport VpnKey from '@material-ui/icons/VpnKey';\n// Actions\nimport { emailChange, init, passwordChange, createAccount } from '../actions/CreateAccount.Actions';\n\nconst styles = {\n    card: {\n        width: '300px',\n        height: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        borderBottomLeftRadius: '0px',\n        borderBottomRightRadius: '0px'\n    },\n    cardHeader: {\n        borderBottom: '1px solid #ddd'\n    },\n    cardContent: {\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexDirection: 'column'\n    },\n    gridContainer: {\n        justifyContent: 'space-evenly',\n        marginTop: '8px'\n    },\n    cardActions: {\n        flexDirection: 'row-reverse',\n        paddingBottom: '24px',\n    },\n    createAccountBtn: {\n        borderTop: '1px solid #ddd',\n        height: '64px',\n        width: '100%'\n    },\n    errorMessage: {\n        color: 'red',\n        border: '1px solid red',\n        fontSize: '12px',\n        margin: '24px 16px 0px',\n        textAlign: 'center'\n    }\n};\n\nclass CreateAccountFormContainer extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        return (\n            <Card style={ styles.card }>\n                <CardHeader title=\"Create Account\" style={ styles.cardHeader }></CardHeader>\n                <CardContent style={ styles.cardContent }>\n                    <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                        <Grid item><Email color=\"action\" /></Grid>\n                        <Grid item>\n                            <TextField\n                                onChange={ this.props.emailChange }\n                                value={ this.props.email.value }\n                                error={ this.props.email.touched && !this.props.email.valid }\n                                label=\"Email\"\n                                type=\"email\"\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                        <Grid item><VpnKey color=\"action\" /></Grid>\n                        <Grid item>\n                            <TextField\n                                onChange={ this.props.passwordChange }\n                                value={ this.props.password.value }\n                                error={ this.props.password.touched && !this.props.password.valid }\n                                label=\"Password\"\n                                type=\"password\"\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n                    {\n                        this.props.error.isError ?\n                            <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                                <Grid style={ styles.errorMessage } item>\n                                    <div>{ this.props.error.errorMessage }</div>\n                                </Grid>\n                            </Grid>\n                        : null\n                    }\n                </CardContent>\n                <CardActions style={ styles.cardActions }>\n                    <Button\n                        onClick={ () => this.props.createAccount(this.props.email.value, this.props.password.value) }\n                        disabled={ !this.props.email.valid || !this.props.password.valid }\n                        color=\"primary\"\n                    >\n                        Create Account\n                    </Button>\n                </CardActions>\n                <Button component={ Link } to={ '/login' } style={ styles.createAccountBtn }>\n                    Login\n                </Button>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.createAccount.error,\n        email: state.createAccount.email,\n        password: state.createAccount.password\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        init: () => { dispatch(init()) },\n        emailChange: (e) => { dispatch(emailChange(e.target.value)) },\n        passwordChange: (e) => { dispatch(passwordChange(e.target.value)) },\n        createAccount: (email, password) => {\n            auth().createUserWithEmailAndPassword(email, password)\n            .then(userData => {\n                const createUser = firestore().collection('users').doc(userData.user.uid).set({\n                    email: userData.user.email,\n                    language: 'en',\n                    uid: userData.user.uid\n                })\n                const signInUser = auth().signInWithEmailAndPassword(email, password);\n\n                Promise.all([createUser, signInUser])\n                .then(_ => dispatch(createAccount(null)))\n                .catch(error => dispatch(createAccount(error.message)));\n            })\n            .catch(error => dispatch(createAccount(error.message)));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountFormContainer);\n","// React\nimport React from 'react';\n// Components\nimport ToolBarComponent from '../components/ToolBar.Component';\nimport CreateAccountFormContainer from '../containers/CreateAccountForm.Container';\n\nconst styles = {\n    mainContainer: {\n        background: '#eee',\n        position: 'absolute',\n        left: '0px',\n        right: '0px',\n        top: '0px',\n        bottom: '0px'\n    },\n    formContainer: {\n        top: '64px',\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n        alignItems: 'center'\n    }\n};\n\nfunction CreateAccountLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n            <ToolBarComponent />\n\n            <div style={ styles.formContainer }>\n                <CreateAccountFormContainer />\n            </div>\n        </div>\n    )\n}\n\nexport default CreateAccountLayout;","const directory = 'SEARCH_FORM_';\n\nexport const ActionTypes = {\n    INIT: `${ directory }INIT`,\n    LOAD_LANGUAGE: `${ directory }LOAD_LANGUAGE`,\n    SEARCH_TITLE: `${ directory }SEARCH_TITLE`\n};\n\nexport function init() {\n    return { type: ActionTypes.INIT }\n}\n\nexport function loadLanguage(language) {\n    return { type: ActionTypes.LOAD_LANGUAGE, payload: language }\n}\n\nexport function searchTitle(response) {\n    return { type: ActionTypes.SEARCH_TITLE, payload: response }\n}\n","const directory = 'SIDENAV_';\n\nexport const ActionTypes = {\n    TOGGLE_SIDENAV: `${ directory }TOGGLE_SIDENAV`,\n    CLOSE_SIDENAV: `${ directory }CLOSE_SIDENAV`,\n    UPDATE_TITLE: `${ directory }UPDATE_TITLE`\n};\n\nexport function toggleSideNav() {\n    return { type: ActionTypes.TOGGLE_SIDENAV }\n}\n\nexport function closeSideNav() {\n    return { type: ActionTypes.CLOSE_SIDENAV }\n}\n\nexport function updateTitle(title) {\n    return { type: ActionTypes.UPDATE_TITLE, payload: title }\n}","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Router\nimport { Link } from 'react-router-dom';\n// Axion\nimport axios from 'axios';\n// Firebase\nimport { auth, firestore } from 'firebase/app';\n// Material\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Language from '@material-ui/icons/Language';\n// Actions\nimport { init, loadLanguage, searchTitle } from '../actions/SearchForm.Actions';\nimport { updateTitle } from '../../sideNav/actions/Drawer.Actions';\n\nconst styles = {\n    appBar: {\n        zIndex: '1'\n    },\n    textField: {\n        width: '100%'\n    },\n    gridContainer: {\n        padding: '8px 8px 8px'\n    },\n    gridTextField: {\n        flex: '1'\n    }\n};\n\nclass SearchFormContainer extends Component {\n    componentWillMount() {\n        this.props.init();\n        this.props.loadLanguage();\n        this.props.updateTitle();\n    }\n\n    render() {\n        return (\n            <AppBar style={ styles.appBar } position=\"relative\" color=\"default\">\n                <Grid spacing={ 16 } style={ styles.gridContainer } alignItems=\"flex-end\" container>\n                    <Grid item>\n                        <IconButton component={ Link } to={ '/app/language' } color=\"primary\">\n                            <Language />\n                        </IconButton>\n                    </Grid>\n                    <Grid style={ styles.gridTextField } item>\n                        <TextField\n                            onChange={ (e) => this.props.searchTitle(e.target.value, this.props.language) }\n                            style={ styles.textField }\n                            label=\"Search Articles\"\n                        />\n                    </Grid>\n                </Grid>\n            </AppBar>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.searchForm.language\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateTitle: () => { dispatch(updateTitle('Search')) },\n        init: () => { dispatch(init()) },\n        loadLanguage: () => {\n            auth().onAuthStateChanged(userData => {\n                if (userData) {\n                    firestore().collection('users').doc(userData.uid).get()\n                    .then(user => dispatch(loadLanguage((user.data() && user.data().language) ? user.data().language : 'en')));\n                }\n            });\n        },\n        searchTitle: async (title, language) => {\n            const response = title ? await axios.get('https://' + language + '.wikipedia.org/w/api.php?action=opensearch&format=json&origin=*&search=' + title) : null\n            dispatch(searchTitle(response ? response.data[1] : []))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchFormContainer);\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// Redux\nimport { connect } from 'react-redux'\n// Material\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListAlt from '@material-ui/icons/ListAlt';\n\nconst styles = {\n    listItem: {\n        borderBottom: '1px solid #ddd'\n    },\n    listItemText: {\n        textTransform: 'capitalize'\n    }\n};\n\nclass ArticlesListContainer extends Component {\n    render() {\n        return (\n            <List component=\"nav\">{\n                this.props.articles.map((article, i) =>\n                    <ListItem\n                        key={ i }\n                        component={ Link } to={ `/app/article/${ this.props.language }/${ article }` }\n                        style={ styles.listItem }\n                        button\n                    >\n                        <ListItemIcon><ListAlt /></ListItemIcon>\n                        <ListItemText style={ styles.listItemText } primary={ article } />\n                    </ListItem>\n                )\n            }</List>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        articles: state.searchForm.articles,\n        language: state.searchForm.language\n    }\n}\n\nexport default connect(mapStateToProps)(ArticlesListContainer)\n","// React\nimport React from 'react';\n// Components\nimport SearchFormContainer from '../containers/SearchForm.Container';\nimport ArticlesListContainer from '../containers/ArticlesList.Container';\n\nconst styles = {\n    mainContainer: {\n        height: '100%',\n        background: '#eee'\n    }\n}\n\nfunction SearchLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n\n            <SearchFormContainer />\n\n            <ArticlesListContainer />\n\n        </div>\n    )\n}\n\nexport default SearchLayout;","// React\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// Redux\nimport { connect } from 'react-redux'\n// Material\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst styles = {\n    appBar: {\n        display: 'flex',\n        paddingLeft: '8px',\n        paddingRight: '8px',\n        alignItems: 'center',\n        position: 'sticky',\n        top: '0px',\n        zIndex: '999',\n        flexDirection: 'row'\n    }\n};\n\nconst ToolBarContainer = _ => (\n    <AppBar style={ styles.appBar } position=\"relative\" color=\"default\">\n        <IconButton component={ Link } to={ '/app/search' } color=\"primary\">\n            <ArrowBack />\n        </IconButton>\n    </AppBar>\n)\n\nexport default connect()(ToolBarContainer);\n","const directory = 'LANGUAGE_';\n\nexport const ActionTypes = {\n    LOAD_LANGUAGE: `${ directory }LOAD_LANGUAGE`,\n    SELECT_LANGUAGE: `${ directory }SELECT_LANGUAGE`\n};\n\nexport function loadLanguage(language) {\n    return { type: ActionTypes.LOAD_LANGUAGE, payload: language }\n}\n\nexport function selectLanguage(language) {\n    return { type: ActionTypes.SELECT_LANGUAGE, payload: language }\n}\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth, firestore } from 'firebase/app';\n// Material\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Language from '@material-ui/icons/Language';\n// Actions\nimport { loadLanguage, selectLanguage } from '../actions/Language.Actions';\nimport { updateTitle } from '../../sideNav/actions/Drawer.Actions';\n\nconst styles = {\n    listItem: {\n        borderBottom: '1px solid #ddd'\n    },\n    listItemText: {\n        textTransform: 'capitalize',\n        cursor: 'pointer'\n    },\n    isActive: {\n        textTransform: 'capitalize',\n        background: '#ccc',\n        cursor: 'default'\n    }\n};\n\nclass LanguageListContainer extends Component {\n    componentWillMount() {\n        this.props.loadLanguage();\n        this.props.updateTitle();\n    }\n\n    render() {\n        return (\n            <List component=\"nav\">\n                { this.props.languages.map(language =>\n                    <ListItem\n                        key={ language.value }\n                        onClick={ () => this.props.selectLanguage(language) }\n                        style={ this.props.languageSelected === language.value ? styles.isActive : styles.listItem }\n                        button\n                    >\n                        <ListItemIcon><Language /></ListItemIcon>\n                        <ListItemText style={ styles.listItemText } primary={ language.lang } />\n                    </ListItem>\n                ) }\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        languages: state.language.languages,\n        languageSelected: state.language.languageSelected\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadLanguage: () => {\n            auth().onAuthStateChanged(userData => {\n                if (userData) {\n                    firestore().collection('users').doc(userData.uid).get()\n                    .then(user => dispatch(loadLanguage((user.data() && user.data().language) ? user.data().language : 'en')));\n                }\n            });\n        },\n        selectLanguage: (language) => {\n            firestore().collection('users').doc(auth().currentUser.uid).update({ language: language.value })\n            .then(_ => dispatch(selectLanguage(language.value)));\n        },\n        updateTitle: () => { dispatch(updateTitle('Language')) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageListContainer);\n","// React\nimport React from 'react';\n// Components\nimport ToolBarContainer from '../containers/ToolBar.Container';\nimport LanguageListContainer from '../containers/LanguageList.Container';\n\nconst styles = {\n    mainContainer: {\n        background: '#eee'\n    }\n}\n\nfunction LanguageLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n\n            <ToolBarContainer />\n\n            <LanguageListContainer />\n\n        </div>\n    )\n}\n\nexport default LanguageLayout;","const directory = 'ARTICLE_';\n\nexport const ActionTypes = {\n    CLEAR_ARTICLE: `${ directory }CLEAR_ARTICLE`,\n    LOAD_ARTICLE: `${ directory }LOAD_ARTICLE`,\n    SELECT_SECTION: `${ directory }SELECT_SECTION`,\n    SAVE_TO_FOLDER: `${ directory }SAVE_TO_FOLDER`,\n    OPEN_DIALOG: `${ directory }OPEN_DIALOG`,\n    CLOSE_DIALOG: `${ directory }CLOSE_DIALOG`,\n    LOAD_FOLDERS: `${ directory }LOAD_FOLDERS`,\n    NEW_FOLDER_NAME_CHANGE: `${ directory }NEW_FOLDER_NAME_CHANGE`,\n    ADD_NEW_FOLDER: `${ directory }ADD_NEW_FOLDER`\n};\n\nexport function clearArticle() {\n    return { type: ActionTypes.CLEAR_ARTICLE }\n}\n\nexport function loadArticle({ title, sections }) {\n    return { type: ActionTypes.LOAD_ARTICLE, payload: { title, sections } }\n}\n\nexport function selectSection(paragraph) {\n    return { type: ActionTypes.SELECT_SECTION, payload: paragraph }\n}\n\nexport function saveToFolder(isSelectedListIds) {\n    return { type: ActionTypes.SAVE_TO_FOLDER, payload: isSelectedListIds }\n}\n\nexport function openDialog() {\n    return { type: ActionTypes.OPEN_DIALOG }\n}\n\nexport function closeDialog() {\n    return { type: ActionTypes.CLOSE_DIALOG }\n}\n\nexport function loadFolders(folders) {\n    return { type: ActionTypes.LOAD_FOLDERS, payload: folders }\n}\n\nexport function newFolderNameChange(newFolderName) {\n    return { type: ActionTypes.NEW_FOLDER_NAME_CHANGE, payload: newFolderName }\n}\n\nexport function addNewFolder() {\n    return { type: ActionTypes.ADD_NEW_FOLDER }\n}\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// Redux\nimport { connect } from 'react-redux'\n// Material\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Save from '@material-ui/icons/Save';\n// Actions\nimport { openDialog } from '../actions/Article.Actions';\n\nconst styles = {\n    appBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: '8px',\n        paddingRight: '8px',\n        alignItems: 'center',\n        position: 'sticky',\n        top: '0px',\n        zIndex: '999',\n        flexDirection: 'row',\n    },\n    title: {\n        opacity: '.6',\n        textTransform: 'capitalize'\n    }\n};\n\nclass ToolBarContainer extends Component {\n    render() {\n        return (\n            <AppBar style={ styles.appBar } position=\"relative\" color=\"default\">\n                <IconButton component={ Link } to={ '/app/search' } color=\"primary\">\n                    <ArrowBack />\n                </IconButton>\n                <h3 style={ styles.title }>{ this.props.title }</h3>\n                <IconButton onClick={ this.props.openDialog } disabled={ !this.props.isSelectedList.length } style={ styles.saveIcon } color=\"primary\">\n                    <Save />\n                </IconButton>\n            </AppBar>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        title: state.article.title,\n        isSelectedList: state.article.isSelectedList\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        openDialog: () => { dispatch(openDialog()); }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolBarContainer)\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Axion\nimport axios from 'axios';\n// Material\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n// Actions\nimport { clearArticle, loadArticle, selectSection } from '../actions/Article.Actions';\nimport { updateTitle } from '../../sideNav/actions/Drawer.Actions';\n\nconst styles = {\n    card: {\n        marginBottom: '24px'\n    },\n    sectionHeader: {\n        textAlign: 'center',\n        margin: '0px 24px 24px',\n        paddingTop: '48px',\n        paddingBottom: '8px',\n        borderBottom: '1px solid #ddd',\n        fontSize: '24px'\n    },\n    cardContent: {\n        borderTop: '1px solid #ddd',\n        borderBottom: '1px solid #ddd'\n    },\n    isSaved: {\n        display: 'none',\n    },\n    isSelectedContent: {\n        background: '#ccc',\n        borderBottomColor: '#aaa',\n    },\n    isSelectedActions: {\n        background: '#ddd'\n    }\n};\n\nclass ArticleContainer extends Component {\n    componentWillMount() {\n        this.props.loadArticle();\n        this.props.updateTitle();\n    }\n    componentWillUnmount() {\n        this.props.clearArticle();\n    }\n    render() {\n        return (\n            this.props.sections.map((section, sIndex) =>\n                <div key={ sIndex }>{\n                    (section.paragraphs && section.paragraphs.length) ?\n                        <div>\n                            {\n                                (section.header && section.paragraphs.length) ?\n                                <h4 style={ styles.sectionHeader }>{ section.header }</h4> :\n                                null \n                            }\n                            { section.paragraphs.map((paragraph, pIndex) =>\n                                <Card key={ pIndex } style={ paragraph.isSaved ? styles.isSaved : styles.card }>\n                                    <CardContent style={ paragraph.isSelected ? styles.isSelectedContent : styles.cardContent }>\n                                        { paragraph.text }\n                                    </CardContent> \n                                    <CardActions\n                                        style={ paragraph.isSelected ? styles.isSelectedActions : null }\n                                    >\n                                        <Button onClick={ () => this.props.selectSection(paragraph) } color=\"primary\" fullWidth>\n                                            { paragraph.isSelected ? 'Remove' : 'Select' }\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            ) }\n                        </div>\n                    : null\n                }</div>\n            )\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        sections: state.article.sections\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadArticle: async () => {\n            const title = window.location.hash.slice(17);\n            const response = await axios.get(`https://${ window.location.hash.slice(14, 16) }.wikipedia.org/w/api.php?origin=*&format=json&action=query&prop=extracts|images&redirects=true&titles=${ title }`);\n            const responseHtml = response.data.query.pages[Object.keys(response.data.query.pages)[0]].extract;\n            const sections = responseHtml.match(/<h(.)>.*?<\\/h\\1>|<p>.*?<\\/p>/g)\n            .reduce((prev, curr, i) => {\n                const tmp = document.createElement('DIV');\n                tmp.innerHTML = curr;\n                const text = tmp.textContent || tmp.innerText || '';\n                if (curr.match(/<h(.)>.*?<\\/h\\1>/g) && text) {\n                    prev.push({\n                        header: text,\n                        paragraphs: [],\n                        sectionIndex: prev.length\n                    })\n                } else if (curr.match(/<p>.*?<\\/p>/g) && text) {\n                    prev[prev.length - 1].paragraphs.push({\n                        header: prev[prev.length - 1].header,\n                        isSelected: false,\n                        isSaved: false,\n                        paragraphId: i,\n                        paragraphIndex: prev[prev.length - 1].paragraphs.length,\n                        sectionIndex: prev[prev.length - 1].sectionIndex,\n                        text: text\n                    });\n                }\n                return prev;\n            }, [{ header: '', paragraphs: [], sectionIndex: 0 }]);\n            dispatch(loadArticle({\n                title: title.replace('%20', ' '),\n                sections: sections\n            }));\n        },\n        updateTitle: () => { dispatch(updateTitle('Article')); },\n        clearArticle: () => { dispatch(clearArticle()); },\n        selectSection: (paragraph) => {\n            paragraph.isSelected = !paragraph.isSelected;\n            dispatch(selectSection(paragraph));\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleContainer);\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth, firestore } from 'firebase/app';\n// Material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Badge from '@material-ui/core/Badge';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Folder from '@material-ui/icons/Folder';\n// Actions\nimport { addNewFolder, closeDialog, loadFolders, newFolderNameChange, saveToFolder } from '../actions/Article.Actions';\n\nconst styles = {\n    list: {\n        borderTop: '1px solid #ddd',\n        maxHeight: '300px',\n        overflow: 'scroll'\n    },\n    listSubheader: {\n        background: 'white',\n        zIndex: '2'\n    },\n    listItem: {\n        borderTop: '1px solid #ddd',\n        paddingTop: '16px',\n        paddingBottom: '8px'\n    },\n    dialogActions: {\n        justifyContent: 'center'\n    }\n};\n\nclass SaveDialogContainer extends Component {\n    componentWillMount() {\n        this.props.loadFolders();\n    }\n\n    render() {\n        return (\n            <Dialog open={ this.props.dialogOpen }>\n                <DialogContent>\n                    <Grid alignItems=\"flex-end\" spacing={ 8 } container>\n                        <Grid item>\n                            <TextField\n                                value={ this.props.newFolderName.value }\n                                onChange={ this.props.newFolderNameChange }\n                                error={ this.props.newFolderName.touched && !this.props.newFolderName.valid }\n                                label=\"Add Folder\"\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions style={ styles.dialogActions }>\n                    <Button onClick={ this.props.closeDialog } color=\"secondary\">Cancel</Button>\n                    <Button\n                        onClick={ () => this.props.addNewFolder(this.props.newFolderName.value) }\n                        disabled={ !this.props.newFolderName.valid }\n                        color=\"primary\"\n                    >\n                        Add\n                    </Button>\n                </DialogActions>\n                <List style={ styles.list } subheader={<ListSubheader style={ styles.listSubheader }>Folders</ListSubheader>} component=\"nav\">\n                    { this.props.folders.map(folder =>\n                        <ListItem\n                            key={ folder.id }\n                            onClick={ () => this.props.saveToFolder(folder, this.props.isSelectedList) }\n                            style={ styles.listItem }\n                            button\n                        >\n                            <ListItemIcon>\n                                <Badge badgeContent={ folder.cardsLength || 0 } color=\"primary\">\n                                    <Folder />\n                                </Badge>\n                            </ListItemIcon>\n                            <ListItemText primary={ folder.folderName } />\n                        </ListItem>\n                    ) }\n                </List>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dialogOpen: state.article.dialogOpen,\n        newFolderName: state.article.newFolderName,\n        folders: state.article.folders,\n        isSelectedList: state.article.isSelectedList\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addNewFolder: (folderName) => {\n            const docRef = firestore().collection('folders').doc();\n            firestore().collection('folders').doc(docRef.id).set({\n                cardsLength: 0,\n                folderName: folderName.trim(),\n                id: docRef.id,\n                userUid: auth().currentUser.uid\n            })\n            .then(_ => {\n                dispatch(addNewFolder())\n            });\n        },\n        closeDialog: () => { dispatch(closeDialog()); },\n        loadFolders: () => {\n            auth().onAuthStateChanged(userData => {\n                if (userData) {\n                    firestore().collection('folders').where('userUid', '==', userData.uid).onSnapshot(foldersData => {\n                        const folders = foldersData.docs.map(folder => folder.data()).sort((a, b) => {\n                            if (a.folderName.toLowerCase() < b.folderName.toLowerCase())\n                                return -1;\n                            if (a.folderName.toLowerCase() > b.folderName.toLowerCase())\n                                return 1;\n                            return 0;\n                        });\n                        dispatch(loadFolders(folders));\n                    });\n                } else {\n                    dispatch(loadFolders([]));\n                }\n            });\n        },\n        newFolderNameChange: (e) => { dispatch(newFolderNameChange(e.target.value)); },\n        saveToFolder: (folder, isSelectedList) => {\n            const batch = firestore().batch();\n\n            const newFolder = {\n                cardsLength: folder.cardsLength + isSelectedList.length,\n                folderName: folder.folderName,\n                id: folder.id,\n                userUid: folder.userUid,\n            };\n    \n            isSelectedList.forEach(selected => {\n                selected.isSaved = true;\n                const cardRef = firestore().collection('cards').doc();\n                batch.set(cardRef, {\n                    folder: newFolder,\n                    id: cardRef.id,\n                    header: selected.header || null,\n                    paragraphIndex: selected.paragraphIndex,\n                    sectionIndex: selected.sectionIndex,\n                    text: selected.text\n                })\n            });\n    \n            const folderRef = firestore().collection('folders').doc(newFolder.id);\n            folderRef.update({ cardsLength: newFolder.cardsLength });\n    \n            batch.commit()\n            .then(_ => {\n                const isSelectedListIds = isSelectedList.map(paragraph => paragraph.paragraphId);\n                dispatch(saveToFolder(isSelectedListIds));\n            });\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveDialogContainer);\n","// React\nimport React from 'react';\n// Components\nimport ToolBarContainer from '../containers/ToolBar.Container';\nimport ArticleContainer from '../containers/Article.Container';\nimport SaveDialogContainer from '../containers/SaveDialog.Container';\n\nconst styles = {\n    mainContainer: {\n        height: '100%',\n        background: '#eee',\n    },\n    articleContainer: {\n        position: 'absolute',\n        top: '64px',\n        bottom: '0px',\n        left: '0px',\n        right: '0px',\n        padding: '24px',\n        overflow: 'auto'\n    },\n}\n\nfunction ArticleLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n\n            <ToolBarContainer />\n\n            <div style={ styles.articleContainer }>\n            \n                <ArticleContainer />\n\n                <SaveDialogContainer />\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default ArticleLayout;","const directory = 'FOLDERS_';\n\nexport const ActionTypes = {\n    LOAD_FOLDERS: `${ directory }LOAD_FOLDERS`\n};\n\nexport function loadFolders(folders) {\n    return { type: ActionTypes.LOAD_FOLDERS, payload: folders }\n}\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth, firestore } from 'firebase/app';\n// Material\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Badge from '@material-ui/core/Badge';\nimport Folder from '@material-ui/icons/Folder';\n// Actions\nimport { loadFolders } from '../actions/Folders.Actions';\nimport { updateTitle } from '../../sideNav/actions/Drawer.Actions';\n\n\nconst styles = {\n    listSubheader: {\n        background: '#eee',\n        borderBottom: '1px solid #ddd',\n        top: '0px'\n    },\n    listItem: {\n        borderBottom: '1px solid #ddd',\n        paddingTop: '16px',\n        paddingBottom: '8px'\n    },\n    listItemText: {\n        textTransform: 'capitalize'\n    }\n};\n\nclass FoldersListContainer extends Component {\n    componentWillMount() {\n        this.props.loadFolders();\n        this.props.updateTitle();\n    }\n\n    render() {\n        return (\n            <List style={ styles.list } component=\"nav\">\n                <ListSubheader style={ styles.listSubheader }>Folders</ListSubheader>\n                { this.props.folders.map(folder =>\n                    <ListItem\n                        key={ folder.id }\n                        component={ Link } to={ `/app/cards/${ folder.id }` }\n                        style={ styles.listItem }\n                        button\n                    >\n                        <ListItemIcon>\n                            <Badge badgeContent={ folder.cardsLength || 0 } color=\"primary\">\n                                <Folder />\n                            </Badge>\n                        </ListItemIcon>\n                        <ListItemText style={ styles.listItemText } primary={ folder.folderName } />\n                    </ListItem>\n                ) }\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        folders: state.folders.folders\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadFolders: () => {\n            auth().onAuthStateChanged(userData => {\n                if (userData) {\n                    firestore().collection('folders').where('userUid', '==', userData.uid).onSnapshot(folders => {\n                        const foldersSorted = folders.docs.map(folder => folder.data()).sort((a, b) => {\n                            if (a.folderName.toLowerCase() < b.folderName.toLowerCase())\n                                return -1;\n                            if (a.folderName.toLowerCase() > b.folderName.toLowerCase())\n                                return 1;\n                            return 0;\n                        });\n                        dispatch(loadFolders(foldersSorted));\n                    });\n                } else {\n                    dispatch(loadFolders([]));\n                }\n            });\n        },\n        updateTitle: () => { dispatch(updateTitle('Folders')) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoldersListContainer);\n","// React\nimport React from 'react';\n// Components\nimport FoldersListContainer from '../containers/FoldersList.Container';\n\nconst styles = {\n    mainContainer: {\n        height: '100%',\n        background: '#eee'\n    }\n}\n\nfunction FoldersLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n\n            <FoldersListContainer />\n\n        </div>\n    )\n}\n\nexport default FoldersLayout;","// React\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// Redux\nimport { connect } from 'react-redux'\n// Material\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst styles = {\n    appBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: '8px',\n        paddingRight: '8px',\n        alignItems: 'center',\n        position: 'sticky',\n        top: '0px',\n        zIndex: '999',\n        flexDirection: 'row'\n    },\n    folderName: {\n        width: '100%',\n        textAlign: 'center',\n        marginRight: '48px',\n        opacity: '.6',\n        textTransform: 'capitalize'\n    }\n};\n\nconst ToolBarContainer = ({ folderName }) => (\n    <AppBar style={ styles.appBar } position=\"relative\" color=\"default\">\n        <IconButton component={ Link } to={ '/app/folders' } color=\"primary\">\n            <ArrowBack />\n        </IconButton>\n        <h3 style={ styles.folderName }>\n            { folderName || '' }\n        </h3>\n    </AppBar>\n);\n\nconst mapStateToProps = state => {\n    return {\n        folderName: state.cards.folderName\n    }\n}\n\nexport default connect(mapStateToProps)(ToolBarContainer)\n","const directory = 'CARDS_';\n\nexport const ActionTypes = {\n    LOAD_CARDS: `${ directory }LOAD_CARDS`,\n    CLEAR_CARDS: `${ directory }CLEAR_CARDS`,\n    PREVIOUS: `${ directory }PREVIOUS`,\n    NEXT: `${ directory }NEXT`,\n    DELETE_CARD: `${ directory }DELETE_CARD`,\n    CONFIRM_DELETE_CARD: `${ directory }CONFIRM_DELETE_CARD`,\n    CLOSE_DELETE_CARD_DIALOG: `${ directory }CLOSE_DELETE_CARD_DIALOG`\n};\n\nexport function loadCards({ cards, folderName }) {\n    return { type: ActionTypes.LOAD_CARDS, payload: { cards, folderName } }\n}\n\nexport function clearCards() {\n    return { type: ActionTypes.CLEAR_CARDS }\n}\n\nexport function previous() {\n    return { type: ActionTypes.PREVIOUS }\n}\n\nexport function next() {\n    return { type: ActionTypes.NEXT }\n}\n\nexport function deleteCard(card) {\n    return { type: ActionTypes.DELETE_CARD, payload: card }\n}\n\nexport function confirmDeleteCard(activeIndex) {\n    return { type: ActionTypes.CONFIRM_DELETE_CARD, payload: activeIndex }\n}\n\nexport function closeDeleteCardDialog() {\n    return { type: ActionTypes.CLOSE_DELETE_CARD_DIALOG }\n}\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { firestore } from 'firebase/app';\n// Material\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n// Actions\nimport { loadCards, clearCards, deleteCard, previous, next } from '../actions/Cards.Actions';\nimport { updateTitle } from '../../sideNav/actions/Drawer.Actions';\n\nconst styles = {\n    card: {\n        position: 'absolute',\n        top: '72px',\n        left: '24px',\n        right: '24px',\n        bottom: '24px'\n    },\n    cardContent: {\n        borderTop: '1px solid #ddd',\n        borderBottom: '1px solid #ddd',\n        overflow: 'auto',\n        height: '100%'\n    },\n    cardActions: {\n        background: 'white',\n        justifyContent: 'space-around',\n        position: 'absolute',\n        width: '100%',\n        bottom: '0px',\n        borderTop: '1px solid #ddd'\n    },\n    deleteBtn: {\n        color: '#E57373'\n    },\n    button: {\n        width: '50%'\n    },\n    active: {\n        display: 'block'\n    },\n    inActive: {\n        display: 'none'\n    }\n};\n\nclass CardsContainer extends Component {\n    componentWillMount() {\n        this.props.loadCards();\n        this.props.updateTitle();\n    }\n\n    componentWillUnmount() {\n        this.props.clearCards();\n    }\n\n    render() {\n        return (\n            this.props.cards.map((card, i) =>\n                this.props.activeIndex === i ?\n                    <Card key={ card.id } style={ styles.card }>\n                        <CardHeader\n                            title={ card.header }\n                            action={\n                                <IconButton onClick={ () => this.props.deleteCard(card) }>\n                                    <DeleteOutline style={ styles.deleteBtn } />\n                                </IconButton>\n                            }\n                        ></CardHeader>\n                        <CardContent style={ styles.cardContent }>\n                            { card.text }\n                        </CardContent> \n                        <CardActions style={ styles.cardActions }>\n                            <Button\n                                onClick={ this.props.previous }\n                                style={ styles.button }\n                                disabled={ i === 0 }\n                                color=\"primary\"\n                            >\n                                <ArrowBack />\n                            </Button>\n                            <Button\n                                onClick={ this.props.next }\n                                style={ styles.button }\n                                disabled={ i === this.props.cards.length - 1 }\n                                color=\"primary\"\n                            >\n                                <ArrowForward />\n                            </Button>\n                        </CardActions>\n                    </Card>\n                : null\n            )\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cards: state.cards.cards,\n        activeIndex: state.cards.activeIndex\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateTitle: () => { dispatch(updateTitle('Cards')) },\n        loadCards: () => {\n            firestore().collection('cards').where('folder.id', '==', window.location.hash.slice(12)).onSnapshot(cardsData => {\n                if (!cardsData.empty) {\n                    const folderName = cardsData.docs[0].data().folder.folderName;\n                    const cards = cardsData.docs.map(card => card.data()).sort((a, b) => {\n                        if (a.sectionIndex === b.sectionIndex) {\n                            return b.paragraphIndex - a.paragraphIndex;\n                        }\n                        return a.sectionIndex > b.sectionIndex ? 1 : -1;\n                    });\n                    dispatch(loadCards({ cards: cards, folderName: folderName }))\n                } else {\n                    dispatch(loadCards({ cards: [], folderName: 'No Cards In Folder' }))\n                }\n            });\n        },\n        clearCards: () => { dispatch(clearCards()) },\n        deleteCard: (card) => { dispatch(deleteCard(card)) },\n        previous: () => { dispatch(previous()) },\n        next: () => { dispatch(next()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps,)(CardsContainer);\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { firestore } from 'firebase/app';\n// Material\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n// Actions\nimport { closeDeleteCardDialog, confirmDeleteCard } from '../actions/Cards.Actions';\n\nclass DeleteCardContainer extends Component {\n    render() {\n        return (\n            <Dialog open={ this.props.deleteCardDialogOpen }>\n                <DialogTitle>Confirm Delete</DialogTitle>\n                <DialogContent>\n                    <Grid alignItems=\"flex-end\" container>\n                        <Grid item>Are you sure you want to delete this card?</Grid>\n                    </Grid>   \n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={ this.props.closeDeleteCardDialog } color=\"secondary\">Cancel</Button>\n                    <Button\n                        onClick={ () => this.props.confirmDeleteCard(this.props.deleteCardRef, this.props.activeIndex, this.props.cards) }\n                        color=\"primary\"\n                    >\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        deleteCardDialogOpen: state.cards.deleteCardDialogOpen,\n        deleteCardRef: state.cards.deleteCardRef,\n        activeIndex: state.cards.activeIndex,\n        cards: state.cards.cards\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        closeDeleteCardDialog: () => { dispatch(closeDeleteCardDialog()) },\n        confirmDeleteCard: (deleteCardRef, activeIndex, cards) => {\n            const batch = firestore().batch();\n            const folder = {\n                cardsLength: deleteCardRef.folder.cardsLength - 1,\n                folderName: deleteCardRef.folder.folderName,\n                id: deleteCardRef.folder.id,\n                userUid: deleteCardRef.folder.userUid,\n            };\n    \n            const deletedCardRef = firestore().collection('cards').doc(deleteCardRef.id);\n            batch.delete(deletedCardRef);\n    \n            const folderRef = firestore().collection('folders').doc(deleteCardRef.folder.id);\n            batch.update(folderRef, { cardsLength: folder.cardsLength });\n    \n            cards.forEach(card => {\n                if (card.id !== deleteCardRef.id) {\n                    const cardRef = firestore().collection('cards').doc(card.id);\n                    batch.update(cardRef, { folder: folder });\n                }\n            });\n    \n            batch.commit()\n            .then(_ => {\n                dispatch(confirmDeleteCard((activeIndex === (cards.length - 1)) ? (cards.length - 2) : activeIndex))\n                dispatch({\n                    type: 'CONFIRM_DELETE_CARD',\n                    payload: (activeIndex === (cards.length - 1)) ? (cards.length - 2) : activeIndex\n                })\n            });\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteCardContainer)\n","// React\nimport React from 'react';\n// Components\nimport ToolBarContainer from '../containers/ToolBar.Container';\nimport CardsContainer from '../containers/Cards.Container';\nimport DeleteCardContainer from '../containers/DeleteCard.Container';\n\nconst styles = {\n    mainContainer: {\n        height: '100%',\n        background: '#eee',\n        overflow: 'scroll',\n    }\n}\n\nfunction CardsLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n\n            <ToolBarContainer />\n\n            <CardsContainer />\n\n            <DeleteCardContainer />\n\n        </div>\n    )\n}\n\nexport default CardsLayout;","const directory = 'ACCOUNT_';\n\nexport const ActionTypes = {\n    RESET_FORM: `${ directory }RESET_FORM`,\n    EMAIL_CHANGE: `${ directory }EMAIL_CHANGE`,\n    PASSWORD_CHANGE: `${ directory }PASSWORD_CHANGE`,\n    SAVE_EMAIL: `${ directory }SAVE_EMAIL`,\n    SAVE_PASSWORD: `${ directory }SAVE_PASSWORD`,\n    OPEN_DELETE_ACCOUNT_DIALOG: `${ directory }OPEN_DELETE_ACCOUNT_DIALOG`,\n    CLOSE_DELETE_ACCOUNT_DIALOG: `${ directory }CLOSE_DELETE_ACCOUNT_DIALOG`,\n};\n\nexport function resetForm() {\n    return { type: ActionTypes.RESET_FORM }\n}\n\nexport function emailChange(email) {\n    return { type: ActionTypes.EMAIL_CHANGE, payload: email }\n}\n\nexport function passwordChange(password) {\n    return { type: ActionTypes.PASSWORD_CHANGE, payload: password }\n}\n\nexport function saveEmail(error) {\n    return { type: ActionTypes.SAVE_EMAIL, payload: error }\n}\n\nexport function savePassword(error) {\n    return { type: ActionTypes.SAVE_PASSWORD, payload: error }\n}\n\nexport function openDeleteAccountDialog() {\n    return { type: ActionTypes.OPEN_DELETE_ACCOUNT_DIALOG }\n}\n\nexport function closeDeleteAccountDialog() {\n    return { type: ActionTypes.CLOSE_DELETE_ACCOUNT_DIALOG }\n}\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth } from 'firebase/app';\n// Material\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Save from '@material-ui/icons/Save';\n// Actions\nimport { resetForm, emailChange, passwordChange, saveEmail, savePassword, openDeleteAccountDialog } from '../actions/Account.Actions';\nimport { updateTitle } from '../../sideNav/actions/Drawer.Actions';\n\nconst styles = {\n    card: {\n        width: '300px',\n        borderBottomLeftRadius: '0px',\n        borderBottomRightRadius: '0px'\n    },\n    header: {\n        padding: '16px',\n        margin: '0px',\n        borderBottom: '1px solid #ddd'\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        height: '160px'\n    },\n    gridContainer: {\n        placeContent: 'space-evenly',\n    },\n    deleteAccountBtn: {\n        borderTop: '1px solid #ddd',\n        height: '64px',\n        width: '100%'\n    },\n    errorMessage: {\n        color: 'red',\n        border: '1px solid red',\n        fontSize: '12px',\n        margin: '24px 16px 0px',\n        textAlign: 'center'\n    }\n};\n\nclass AccountFormContainer extends Component {\n    componentWillMount() {\n        this.props.resetForm();\n        this.props.updateTitle();\n    }\n    componentWillUnmount() {\n        this.props.resetForm();\n    }\n\n    render() {\n        return (\n            <div>\n                <Card style={ styles.card }>\n                    <h4 style={ styles.header }>Update Account</h4>\n                    <CardContent style={ styles.cardContent }>\n                        <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                            <Grid item>\n                                <TextField\n                                    onChange={ this.props.emailChange }\n                                    value={ this.props.email.value }\n                                    error={ this.props.email.touched && !this.props.email.valid }\n                                    label=\"Update Email\"\n                                    type=\"email\"\n                                    required\n                                />\n                            </Grid>\n                            <Grid item>\n                                <IconButton\n                                    onClick={ () => this.props.saveEmail(this.props.email.value) }\n                                    disabled={ !this.props.email.valid }\n                                    color=\"primary\"\n                                >\n                                    <Save />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                        <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                            <Grid item>\n                                <TextField\n                                    onChange={ this.props.passwordChange }\n                                    value={ this.props.password.value }\n                                    error={ this.props.password.touched && !this.props.password.valid }\n                                    label=\"Update Password\"\n                                    type=\"password\"\n                                    required\n                                />\n                            </Grid>\n                            <Grid item>\n                                <IconButton\n                                    onClick={ () => this.props.savePassword(this.props.password.value) }\n                                    disabled={ !this.props.password.valid }\n                                    color=\"primary\"\n                                >\n                                    <Save />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                        {\n                            this.props.error.isError ?\n                                <Grid alignItems=\"flex-end\" spacing={ 16 } style={ styles.gridContainer } container>\n                                    <Grid style={ styles.errorMessage } item>\n                                        <div>{ this.props.error.errorMessage }</div>\n                                    </Grid>\n                                </Grid>\n                            : null\n                        }\n                    </CardContent>\n                    <Button onClick={ this.props.openDeleteAccountDialog } style={ styles.deleteAccountBtn }>Delete Account</Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        email: state.account.email,\n        password: state.account.password,\n        error: state.account.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        resetForm: () => { dispatch(resetForm()) },\n        emailChange: (e) => { dispatch(emailChange(e.target.value)) },\n        passwordChange: (e) => { dispatch(passwordChange(e.target.value)) },\n        saveEmail: (email) => {\n            auth().currentUser.updateEmail(email)\n            .then(_ => dispatch(saveEmail(null)))\n            .catch(error => dispatch(saveEmail(error.message)));\n        },\n        savePassword: (password) => {\n            auth().currentUser.updatePassword(password)\n            .then(_ => dispatch(savePassword(null)))\n            .catch(error => dispatch(savePassword(error.message)));\n        },\n        openDeleteAccountDialog: () => { dispatch(openDeleteAccountDialog()) },\n        updateTitle: () => { dispatch(updateTitle('Account')) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountFormContainer);\n","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth, firestore } from 'firebase/app';\n// Material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n// Actions\nimport { closeDeleteAccountDialog, resetForm } from '../actions/Account.Actions';\n\nclass DeleteAccountDialogContainer extends Component {\n    render() {\n        return (\n            <Dialog open={ this.props.deleteAccountDialogOpen }>\n                <DialogContent>\n                    <DialogContentText>Are you sure you want to delete your account?</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={ this.props.closeDeleteAccountDialog } color=\"secondary\">Cancel</Button>\n                    <Button onClick={ this.props.deleteAccount } color=\"primary\">Confirm</Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        deleteAccountDialogOpen: state.account.deleteAccountDialogOpen\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        closeDeleteAccountDialog: () => { dispatch(closeDeleteAccountDialog()) },\n        deleteAccount: () => {\n            firestore().collection('users').doc(auth().currentUser.uid).delete()\n            .then(_ => auth().signOut().then(_ => dispatch(resetForm())));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccountDialogContainer);\n","// React\nimport React from 'react';\n// Components\nimport AccountFormContainer from '../containers/AccountForm.Container';\nimport DeleteAccountDialogContainer from '../containers/DeleteAccountDialog.Container';\n\nconst styles = {\n    mainContainer: {\n        height: '100%',\n        background: '#eee'\n    },\n    formContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n        alignItems: 'center'\n    }\n}\n\nfunction AccountLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n\n            <div style={ styles.formContainer }>\n\n                <AccountFormContainer />\n\n                <DeleteAccountDialogContainer/>\n\n            </div>\n        </div>\n    )\n}\n\nexport default AccountLayout;","// React\nimport React, { Component } from 'react';\n// Redux\nimport { connect } from 'react-redux'\n// Material\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/icons/Menu';\n// Actions\nimport { toggleSideNav } from '../actions/Drawer.Actions';\n\nconst styles = {\n    menuIcon: {\n        color: 'white'\n    },\n    appBar: {\n        height: '64px',\n        flexDirection: 'row',\n        display: 'flex',\n        paddingLeft: '8px',\n        paddingRight: '8px',\n        alignItems: 'center',\n        zIndex: '999',\n    }\n};\n\nclass ToolBarContainer extends Component {\n    render() {\n        return (\n            <AppBar style={ styles.appBar } position=\"fixed\" color=\"primary\">\n                <IconButton onClick={ this.props.toggleSideNav } style={ styles.menuIcon }>\n                    <Menu />\n                </IconButton>\n                { this.props.title }\n            </AppBar>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        title: state.sideNav.title\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleSideNav: () => { dispatch(toggleSideNav()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolBarContainer);\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth } from 'firebase/app'\n// Material\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Search from '@material-ui/icons/Search';\nimport FolderOutlined from '@material-ui/icons/FolderOutlined';\nimport PersonOutline from '@material-ui/icons/PersonOutline';\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\n// Actions\nimport { closeSideNav, toggleSideNav } from '../actions/Drawer.Actions';\n\nconst styles = {\n    list: {\n        width: '250px',\n        display: 'block'\n    }\n};\n\nclass DrawerContainer extends Component {\n    componentWillMount() {\n        this.props.closeSideNav();\n    }\n\n    render() {\n        return (\n            <Drawer open={ this.props.open } onClose={ this.props.toggleSideNav }>\n                <List style={ styles.list }>\n                    <ListItem component={ Link } to={ '/app/search' } onClick={ this.props.toggleSideNav } button>\n                        <ListItemIcon>\n                            <Search />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Search\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem component={ Link } to={ '/app/folders' } onClick={ this.props.toggleSideNav } button>\n                        <ListItemIcon>\n                            <FolderOutlined />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Folders\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem component={ Link } to={ '/app/account' } onClick={ this.props.toggleSideNav } button>\n                        <ListItemIcon>\n                            <PersonOutline />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Account\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem onClick={ this.props.logout } button>\n                        <ListItemIcon>\n                            <PowerSettingsNew />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Logout\" />\n                    </ListItem>\n                    <Divider />\n                </List>\n            </Drawer>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        open: state.sideNav.open\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        closeSideNav: () => { dispatch(closeSideNav()) },\n        toggleSideNav: () => { dispatch(toggleSideNav()) },\n        logout: () => { auth().signOut(); }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerContainer);\n","// React\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// Containers\nimport SearchLayout from '../../search/components/SearchLayout.Component';\nimport LanguageLayout from '../../language/components/LanguageLayout.Component';\nimport ArticleLayout from '../../article/components/ArticleLayout.Component';\nimport FoldersLayout from '../../folders/components/FoldersLayout.Component';\nimport CardsLayout from '../../cards/components/CardsLayout.Component';\nimport AccountLayout from '../../account/components/AccountLayout.Component';\n// Components\nimport ToolBarContainer from '../containers/ToolBar.Container';\nimport DrawerContainer from '../containers/Drawer.Container';\n\nconst styles = {\n    mainContainer: {\n    },\n    innerContainer: {\n        top: '64px',\n        bottom: '0px',\n        position: 'absolute',\n        width: '100%',\n        overflow: 'auto'\n    }\n}\n\nfunction SideNavLayout() {\n    return(\n        <div style={ styles.mainContainer }>\n            <DrawerContainer />\n\n            <ToolBarContainer />\n\n            <div style={ styles.innerContainer }>\n                <Switch>\n                    <Route path='/app/search' component={ SearchLayout } />\n                    <Route path='/app/language' component={ LanguageLayout } />\n                    <Route path='/app/article/:language/:title' component={ ArticleLayout } />\n                    <Route path='/app/folders' component={ FoldersLayout } />\n                    <Route path='/app/cards' component={ CardsLayout } />\n                    <Route path='/app/account' component={ AccountLayout } />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default SideNavLayout;","const directory = 'APP_';\n\nexport const ActionTypes = {\n    CHECK_USER: `${ directory }CHECK_USER`\n};\n\nexport function checkUser(isLoggedIn) {\n    return { type: ActionTypes.CHECK_USER, payload: isLoggedIn }\n}\n","// React\nimport React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n// Redux\nimport { connect } from 'react-redux'\n// Firebase\nimport { auth } from 'firebase/app';\n// Components\nimport LoginLayout from '../../login/components/LoginLayout.Component';\nimport CreateAccountLayout from '../../create-account/components/CreateAccountLayout.Component';\nimport SideNavLayout from '../../sideNav/components/SideNavLayout.Component';\n// Actions\nimport { checkUser } from '../actions/App.Actions';\n\nconst LoginRoute = ({ component: Component, ...rest }) => {\n    return rest.isLoggedIn ?\n        <Redirect to='/app/search' /> :\n        <Route exact path='/login' component={ LoginLayout } />;\n}\n\nconst CreateAccountRoute = ({ component: Component, ...rest }) => {\n    return rest.isLoggedIn ?\n        <Redirect to='/app/search' /> :\n        <Route exact path='/create-account' component={ CreateAccountLayout } />;\n}\n\nconst AppRoute = ({ component: Component, ...rest }) => {\n    return !rest.isLoggedIn ?\n        <Redirect to='/login' /> :\n        <Route path='/app' component={ SideNavLayout } />;\n}\n\nclass AppContainer extends Component {\n    componentDidMount() {\n        this.props.checkUser();\n    }\n\n    render() {\n        return (\n            this.props.hasLoaded ?\n            <Switch>\n                <LoginRoute path='/login' { ...this.props } />\n                <CreateAccountRoute path='/create-account' { ...this.props } />\n                <AppRoute path='/app' { ...this.props } />\n                <Redirect from=\"/\" to=\"/login\" />\n            </Switch>\n            : null\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.app.isLoggedIn,\n        hasLoaded: state.app.hasLoaded\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        checkUser: () => {\n            auth().onAuthStateChanged(userData => dispatch(checkUser(userData ? true : false)));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","// React\nimport React from 'react'\nimport { HashRouter, Route } from 'react-router-dom'\n// Components\nimport AppContainer from '../containers/App.Container';\n\nconst styles = {\n    mainContainer: {\n        height: '100%'\n    }\n};\n\nfunction AppComponent() {\n    return (\n        <div style={ styles.mainContainer }>\n            <HashRouter>\n                <Route path=\"/\" component={ AppContainer } />\n            </HashRouter>,\n        </div>\n    )\n}\n\nexport default AppComponent;\n","// Action Types\nimport { ActionTypes } from '../actions/LoginForm.Actions';\n\nconst init = {\n    error: {\n        isError: false,\n        errorMessage: ''\n    },\n    email: {\n        touched: false,\n        valid: false,\n        value: ''\n    },\n    password: {\n        touched: false,\n        valid: false,\n        value: ''\n    }\n};\n\nconst emailPattern = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\nconst loginForm = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.INIT:\n        return Object.assign({}, {\n            error: {\n                isError: false,\n                errorMessage: ''\n            },\n            email: {\n                touched: false,\n                valid: false,\n                value: ''\n            },\n            password: {\n                touched: false,\n                valid: false,\n                value: ''\n            }\n        });\n\n        case ActionTypes.EMAIL_CHANGE:\n            return Object.assign({}, state, {\n                email: {\n                    touched: true,\n                    valid: emailPattern.test(action.payload) && action.payload,\n                    value: action.payload\n                },\n                error: {\n                    isError: false,\n                    errorMessage: ''\n                }\n            });\n\n            case ActionTypes.PASSWORD_CHANGE:\n            return Object.assign({}, state, {\n                password: {\n                    touched: true,\n                    valid: action.payload.length,\n                    value: action.payload\n                },\n                error: {\n                    isError: false,\n                    errorMessage: ''\n                }\n            });\n\n            case ActionTypes.LOGIN:\n            return Object.assign({}, state, {\n                error: {\n                    isError: action.payload ? true : false,\n                    errorMessage: action.payload ? action.payload : ''\n                },\n            });\n\n        default:\n        return state\n    }\n}\n\nexport default loginForm;","// Action Types\nimport { ActionTypes } from '../actions/ResetPassword.Action';\n\nconst init = {\n    resetPasswordMessage: '',\n    resetPasswordError: false,\n    resetPasswordEmail: {\n        touched: false,\n        valid: false,\n        value: ''\n    },\n    resetPasswordDialogOpen: false\n};\n\nconst emailPattern = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\nconst resetPassword = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.OPEN_RESET_PASSWORD_DIALOG:\n        return Object.assign({}, state, {\n            resetPasswordDialogOpen: true\n        });\n\n        case ActionTypes.CLOSE_RESET_PASSWORD_DIALOG:\n        return Object.assign({}, {\n            resetPasswordEmail: {\n                touched: false,\n                valid: true,\n                value: ''\n            },\n            resetPasswordMessage: '',\n            resetPasswordError: false,\n            resetPasswordDialogOpen: false\n        });\n\n        case ActionTypes.RESET_PASSWORD_EMAIL_CHANGE:\n        return Object.assign({}, state, {\n            resetPasswordEmail: {\n                touched: true,\n                valid: emailPattern.test(action.payload) && action.payload.length,\n                value: action.payload\n            },\n            resetPasswordMessage: '',\n            resetPasswordError: false,\n            resetPasswordDialogOpen: state.resetPasswordDialogOpen\n        });\n\n        case ActionTypes.RESET_PASSWORD:\n        return Object.assign({}, state, {\n            resetPasswordEmail: {\n                touched: false,\n                valid: true,\n                value: action.payload.resetPasswordError ? state.resetPasswordEmail.value : ''\n            },\n            resetPasswordMessage: action.payload.resetPasswordMessage,\n            resetPasswordError: action.payload.resetPasswordError,\n        });\n\n        default:\n        return state\n    }\n}\n\nexport default resetPassword;","// Reducers\nimport loginForm from './LoginForm.Reducers';\nimport resetPassword from './ResetPassword.Reducer';\n\nexport default {\n    loginForm,\n    resetPassword\n};\n","// Action Types\nimport { ActionTypes } from '../actions/CreateAccount.Actions';\n\nconst init = {\n    error: {\n        isError: false,\n        errorMessage: ''\n    },\n    email: {\n        touched: false,\n        valid: false,\n        value: ''\n    },\n    password: {\n        touched: false,\n        valid: false,\n        value: ''\n    }\n};\n\nconst emailPattern = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\nconst createAccount = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.INIT:\n        return Object.assign({}, {\n            error: {\n                isError: false,\n                errorMessage: ''\n            },\n            email: {\n                touched: false,\n                valid: false,\n                value: ''\n            },\n            password: {\n                touched: false,\n                valid: false,\n                value: ''\n            }\n        });\n\n        case ActionTypes.EMAIL_CHANGE:\n            return Object.assign({}, state, {\n                email: {\n                    touched: true,\n                    valid: emailPattern.test(action.payload) && action.payload,\n                    value: action.payload\n                },\n                error: {\n                    isError: false,\n                    errorMessage: ''\n                }\n            });\n\n            case ActionTypes.PASSWORD_CHANGE:\n            return Object.assign({}, state, {\n                password: {\n                    touched: true,\n                    valid: action.payload.length,\n                    value: action.payload\n                },\n                error: {\n                    isError: false,\n                    errorMessage: ''\n                }\n            });\n\n            case ActionTypes.CREATE_ACCOUNT:\n            return Object.assign({}, state, {\n                error: {\n                    isError: action.payload ? true : false,\n                    errorMessage: action.payload ? action.payload : ''\n                }\n            });\n\n        default:\n        return state\n    }\n}\n\nexport default createAccount;\n","// Reducers\nimport createAccount from './CreateAccountForm.Reducers';\n\nexport default {\n    createAccount\n};\n","// Action Types\nimport { ActionTypes } from '../actions/App.Actions';\n\nconst init = {\n    isLoggedIn: false,\n    hasLoaded: false\n};\n\nconst account = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.CHECK_USER:\n        return Object.assign({}, {\n            isLoggedIn: action.payload,\n            hasLoaded: true\n        });\n\n        default:\n        return state\n    }\n}\n\nexport default account;","// Reducers\nimport app from './App.Reducers';\n\nexport default {\n    app\n};\n","// Action Types\nimport { ActionTypes } from '../actions/Drawer.Actions';\n\nconst init = {\n    open: false,\n    title: ''\n};\n\nconst sideNav = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.TOGGLE_SIDENAV:\n        return Object.assign({}, state, { open: !state.open });\n\n        case ActionTypes.CLOSE_SIDENAV:\n        return Object.assign({}, state, { open: false });\n\n        case ActionTypes.UPDATE_TITLE:\n        return Object.assign({}, state, { title: action.payload });\n\n        default:\n        return state\n    }\n}\n\nexport default sideNav;\n","// Reducers\nimport sideNav from '../reducers/SideNav.Reducers';\n\nexport default {\n    sideNav\n};\n","// Action Types\nimport { ActionTypes } from '../actions/SearchForm.Actions';\n\nconst init = {\n    articles: [],\n    language: ''\n};\n\nconst searchForm = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_LANGUAGE:\n        return Object.assign({}, state, { language: action.payload });\n\n        case ActionTypes.SEARCH_TITLE:\n        return Object.assign({}, state, { articles: action.payload });\n\n        case ActionTypes.INIT:\n        return Object.assign({}, { articles: [], language: action.language });\n\n        default:\n        return state\n    }\n}\n\nexport default searchForm;","// Reducers\nimport searchForm from './SearchForm.Reducers';\n\nexport default {\n    searchForm\n};\n","// Action Types\nimport { ActionTypes } from '../actions/Language.Actions';\n\nconst init = {\n    languageSelected: '',\n    languages: [\n        { value: \"ar\", lang: \"العربية\" },\n        { value: \"be\", lang: \"Беларуская (Акадэмічная)\" },\n        { value: \"bg\", lang: \"Български\" },\n        { value: \"ca\", lang: \"Català\" },\n        { value: \"cs\", lang: \"Čeština\" },\n        { value: \"da\", lang: \"Dansk\" },\n        { value: \"de\", lang: \"Deutsch\" },\n        { value: \"el\", lang: \"Ελληνικά\" },\n        { value: \"en\", lang: \"English\" },\n        { value: \"es\", lang: \"Español\" },\n        { value: \"eo\", lang: \"Esperanto\" },\n        { value: \"et\", lang: \"Eesti\" },\n        { value: \"eu\", lang: \"Euskara\" },\n        { value: \"fa\", lang: \"فارسی\" },\n        { value: \"fr\", lang: \"Français\" },\n        { value: \"gl\", lang: \"Galego\" },\n        { value: \"ko\", lang: \"한국어\" },\n        { value: \"hy\", lang: \"Հայերեն\" },\n        { value: \"hi\", lang: \"हिन्दी\" },\n        { value: \"hr\", lang: \"Hrvatski\" },\n        { value: \"id\", lang: \"Bahasa Indonesia\" },\n        { value: \"it\", lang: \"Italiano\" },\n        { value: \"he\", lang: \"עברית\" },\n        { value: \"la\", lang: \"Latina\" },\n        { value: \"lt\", lang: \"Lietuvių\" },\n        { value: \"hu\", lang: \"Magyar\" },\n        { value: \"ms\", lang: \"Bahasa Melayu\" },\n        { value: \"min\", lang: \"Bahaso Minangkabau\" },\n        { value: \"nl\", lang: \"Nederlands\" },\n        { value: \"ja\", lang: \"日本語\" },\n        { value: \"no\", lang: \"Norsk (Bokmål)\" },\n        { value: \"nn\", lang: \"Norsk (Nynorsk)\" },\n        { value: \"ce\", lang: \"Нохчийн\" },\n        { value: \"uz\", lang: \"Oʻzbekcha / Ўзбекча\" },\n        { value: \"pl\", lang: \"Polski\" },\n        { value: \"pt\", lang: \"Português\" },\n        { value: \"kk\", lang: \"Қазақша / Qazaqşa / قازاقشا\" },\n        { value: \"ro\", lang: \"Română\" },\n        { value: \"ru\", lang: \"Русский\" },\n        { value: \"simple\", lang: \"Simple English\" },\n        { value: \"ceb\", lang: \"Sinugboanong Binisaya\" },\n        { value: \"sk\", lang: \"Slovenčina\" },\n        { value: \"sl\", lang: \"Slovenščina\" },\n        { value: \"sr\", lang: \"Српски / Srpski\" },\n        { value: \"sh\", lang: \"Srpskohrvatski / Српскохрватски\" },\n        { value: \"fi\", lang: \"Suomi\" },\n        { value: \"sv\", lang: \"Svenska\" },\n        { value: \"tr\", lang: \"Türkçe\" },\n        { value: \"uk\", lang: \"Українська\" },\n        { value: \"vi\", lang: \"Tiếng Việt\" },\n        { value: \"vo\", lang: \"Volapük\" },\n        { value: \"war\", lang: \"Winaray\" },\n        { value: \"zh\", lang: \"中文\" }\n    ]\n};\n\nconst language = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_LANGUAGE:\n        return Object.assign({}, state, { languageSelected: action.payload });\n\n        case ActionTypes.SELECT_LANGUAGE:\n        return Object.assign({}, state, { languageSelected: action.payload });\n\n        default:\n        return state\n    }\n}\n\nexport default language;","// Reducers\nimport language from './Language.Reducers';\n\nexport default {\n    language\n};\n","// Action Types\nimport { ActionTypes } from '../actions/Article.Actions';\n\nconst init = {\n    title: '',\n    sections: [],\n    isSelectedList: [],\n    dialogOpen: false,\n    folders: [],\n    newFolderName: {\n        touched: false,\n        valid: true,\n        value: ''\n    }\n};\n\nconst article = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.CLEAR_ARTICLE:\n        return Object.assign({}, state, {\n            title: '',\n            sections: [],\n            isSelectedList: [],\n            dialogOpen: state.dialogOpen,\n            folders: state.folders,\n            newFolderName: {\n                touched: false,\n                valid: true,\n                value: ''\n            }\n        });\n\n        case ActionTypes.LOAD_ARTICLE:\n        return Object.assign({}, state, { title: action.payload.title, sections: action.payload.sections });\n\n        case ActionTypes.SELECT_SECTION:\n        return Object.assign({}, state, {\n            sections: [...state.sections],\n            isSelectedList:\n                action.payload.isSelected ?\n                [action.payload, ...state.isSelectedList] :\n                state.isSelectedList.filter(paragraph => paragraph.paragraphId !== action.payload.paragraphId),\n        });\n\n        case ActionTypes.OPEN_DIALOG:\n        return Object.assign({}, state, { dialogOpen: true });\n\n        case ActionTypes.CLOSE_DIALOG:\n        return Object.assign({}, state, {\n            dialogOpen: false,\n            newFolderName: {\n                touched: false,\n                valid: true,\n                value: ''\n            }\n        });\n\n        case ActionTypes.LOAD_FOLDERS:\n        return Object.assign({}, state, { folders: action.payload });\n\n        case ActionTypes.NEW_FOLDER_NAME_CHANGE:\n        return Object.assign({}, state, {\n            newFolderName: {\n                touched: true,\n                valid: action.payload.length,\n                value: action.payload\n            }\n        });\n\n        case ActionTypes.ADD_NEW_FOLDER:\n        return Object.assign({}, state, {\n            newFolderName: {\n                touched: false,\n                valid: true,\n                value: ''\n            }\n        });\n\n        case ActionTypes.SAVE_TO_FOLDER:\n        return Object.assign({}, state, {\n            sections: state.sections.map(section =>\n                Object.assign({}, section, {\n                    paragraphs: section.paragraphs.filter(paragraph => !action.payload.includes(paragraph.paragraphId))\n                })\n            ),\n            isSelectedList: [],\n            dialogOpen: false,\n            newFolderName: {\n                touched: false,\n                valid: true,\n                value: ''\n            }\n        });\n\n        default:\n        return state\n    }\n}\n\nexport default article;\n","// Reducers\nimport article from './Article.Reducers';\n\nexport default {\n    article\n};\n","// Action Types\nimport { ActionTypes } from '../actions/Folders.Actions';\n\nconst init = {\n    folders: []\n};\n\nconst folders = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_FOLDERS:\n        return Object.assign({}, { folders: action.payload });\n\n        default:\n        return state\n    }\n}\n\nexport default folders;","// Reducers\nimport folders from './Folders.Reducers';\n\nexport default {\n    folders\n};\n","// Action Types\nimport { ActionTypes } from '../actions/Cards.Actions';\n\nconst init = {\n    activeIndex: 0,\n    cards: [],\n    deleteCardDialogOpen: false,\n    deleteCardRef: {},\n    folderName: ''\n};\n\nconst cards = (state = init, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_CARDS:\n        return Object.assign({}, state, {\n            cards: action.payload.cards,\n            folderName: action.payload.folderName\n        });\n\n        case ActionTypes.CLEAR_CARDS:\n        return Object.assign({}, {\n            cards: [],\n            activeIndex: 0,\n            deleteCardDialogOpen: false,\n            deleteCardRef: {},\n            folderName: ''\n        });\n\n        case ActionTypes.PREVIOUS:\n        return Object.assign({}, state, { activeIndex: state.activeIndex - 1 });\n\n        case ActionTypes.NEXT:\n        return Object.assign({}, state, { activeIndex: state.activeIndex + 1 });\n\n        case ActionTypes.DELETE_CARD:\n        return Object.assign({}, state, { deleteCardDialogOpen: true, deleteCardRef: action.payload });\n\n        case ActionTypes.CONFIRM_DELETE_CARD:\n        return Object.assign({}, state, { activeIndex: action.payload, deleteCardDialogOpen: false, deleteCardRef: {} });\n\n        case ActionTypes.CLOSE_DELETE_CARD_DIALOG:\n        return Object.assign({}, state, { deleteCardDialogOpen: false, deleteCardRef: {} });\n\n        default:\n        return state\n    }\n}\n\nexport default cards;","// Reducers\nimport cards from './Cards.Reducers';\n\nexport default {\n    cards\n};\n","// Action Types\nimport { ActionTypes } from '../actions/Account.Actions';\n\nconst init = {\n    email: {\n        touched: false,\n        valid: false,\n        value: ''\n    },\n    password: {\n        touched: false,\n        valid: false,\n        value: ''\n    },\n    error: {\n        isError: false,\n        errorMessage: ''\n    },\n    deleteAccountDialogOpen: false\n};\n\nconst emailPattern = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\nconst account = (state = init, action) => {\n    switch (action.type) {\n\n        case ActionTypes.RESET_FORM:\n        return Object.assign({}, {\n            email: {\n                touched: false,\n                valid: false,\n                value: ''\n            },\n            password: {\n                touched: false,\n                valid: false,\n                value: ''\n            },\n            error: {\n                isError: false,\n                errorMessage: ''\n            },\n            deleteAccountDialogOpen: false\n        });\n\n        case ActionTypes.EMAIL_CHANGE:\n        return Object.assign({}, state, {\n            email: {\n                touched: true,\n                valid: emailPattern.test(action.payload) && action.payload.length,\n                value: action.payload\n            },\n            error: {\n                isError: false,\n                errorMessage: ''\n            }\n        });\n\n        case ActionTypes.PASSWORD_CHANGE:\n        return Object.assign({}, state, {\n            password: {\n                touched: true,\n                valid: action.payload.length,\n                value: action.payload\n            },\n            error: {\n                isError: false,\n                errorMessage: ''\n            },\n        });\n\n        case ActionTypes.SAVE_EMAIL:\n        return Object.assign({}, state, {\n            email: action.payload.isError ? {\n                touched: true,\n                valid: true,\n                value: state.email.value\n            } : {\n                touched: false,\n                valid: false,\n                value: ''\n            },\n            error: action.payload\n        });\n\n        case ActionTypes.SAVE_PASSWORD:\n        return Object.assign({}, state, {\n            password: action.payload.isError ? {\n                touched: true,\n                valid: true,\n                value: state.password.value\n            } : {\n                touched: false,\n                valid: false,\n                value: ''                \n            },\n            error: action.payload\n        });\n\n        case ActionTypes.OPEN_DELETE_ACCOUNT_DIALOG:\n        return Object.assign({}, state, { deleteAccountDialogOpen: true });\n\n        case ActionTypes.CLOSE_DELETE_ACCOUNT_DIALOG:\n        return Object.assign({}, state, { deleteAccountDialogOpen: false });\n\n        default:\n        return state\n    }\n}\n\nexport default account;","// Reducers\nimport account from './Account.Reducers';\n\nexport default {\n    account\n};\n","// Redux\nimport { combineReducers } from 'redux';\n// Reducers\nimport login from './login/reducers';\nimport createAccount from './create-account/reducers';\nimport app from './app/reducers';\nimport sideNav from './sideNav/reducers';\nimport searchForm from './search/reducers';\nimport language from './language/reducers';\nimport article from './article/reducers';\nimport folders from './folders/reducers';\nimport cards from './cards/reducers';\nimport account from './account/reducers';\n\nconst allReducers = Object.assign({}, login, createAccount, app, sideNav, searchForm, language, article, folders, cards, account);\n\nexport default combineReducers(\n    allReducers\n);\n","// React\nimport React from 'react'\nimport { render } from 'react-dom'\n// Redux\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\n// Thunk\nimport thunk from 'redux-thunk';\n// Firebase\nimport firebase from 'firebase';\n// Service Worker\nimport registerServiceWorker from './registerServiceWorker';\n// Components\nimport AppComponent from './app/components/App.Component'\n// Reducers\nimport rootReducers from './rootReducers'\n// Styles\nimport './index.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducers,\n  composeEnhancers(\n    applyMiddleware(thunk),\n  )\n);\n\nfirebase.initializeApp({\n    apiKey: 'AIzaSyAMBiLz5d4cV1nhq6IIs8JJSpksTetqCOk',\n    authDomain: 'clickwik-6f562.firebaseapp.com',\n    databaseURL: 'https://clickwik-6f562.firebaseio.com',\n    projectId: 'clickwik-6f562',\n    storageBucket: 'clickwik-6f562.appspot.com',\n    messagingSenderId: '934548411316'\n});\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nrender(\n    <Provider store={ store }>\n        <AppComponent />\n    </Provider>,\n  document.getElementById('root')\n)\n\nregisterServiceWorker();\n"],"sourceRoot":""}