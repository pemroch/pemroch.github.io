{"version":3,"sources":["webpack:///./src/app/account/account.component.ts","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/delete-account/delete-account.component.ts","webpack:///./src/app/account/email-form/email-form.component.ts","webpack:///./src/app/account/form-card/form-card.component.ts","webpack:///./src/app/account/password-form/password-form.component.ts","webpack:///./src/app/account/services/account.service.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { CoreService } from '@core/core.service';\nimport { AccountService } from './services/account.service';\n\n@Component({\n    selector: 'app-account',\n    template: `\n        <app-form-card>\n            <app-email-form\n                [pending]=\"this.accountService.pending$ | async\"\n                (saveEmail)=\"this.accountService.saveEmail($event)\"\n                (clearError)=\"this.accountService.error$.next('')\"\n            ></app-email-form>\n            <app-password-form\n                [pending]=\"this.accountService.pending$ | async\"\n                (savePassword)=\"this.accountService.savePassword($event)\"\n                (clearError)=\"this.accountService.error$.next('')\"\n            ></app-password-form>\n            <p class=\"mat-caption error\">{{ this.accountService.error$ | async }}</p>\n            <button (click)=\"this.accountService.deleteAccount()\" color=\"warn\" mat-button>\n                Delete Account\n            </button>\n        </app-form-card>\n    `,\n    styles: [`\n        button {\n            width: 100%;\n            margin-top: 16px;\n        }\n        .error {\n            color: #f44336;\n            padding: 8px;\n            text-align: center;\n        }\n    `],\n    providers: [AccountService]\n})\nexport class AccountComponent implements OnInit {\n    constructor(\n        public coreService: CoreService,\n        public accountService: AccountService\n    ) { }\n\n    ngOnInit() {\n        this.coreService.toolbarTitle$.next('Account');\n    }\n}\n\n","// Modules\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\n// Module Components\nimport { AccountComponent } from './account.component';\nimport { EmailFormComponent } from './email-form/email-form.component';\nimport { PasswordFormComponent } from './password-form/password-form.component';\nimport { FormCardComponent } from './form-card/form-card.component';\nimport { DeleteAccountComponent } from './delete-account/delete-account.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatDialogModule,\n        MatIconModule,\n        MatInputModule,\n        RouterModule.forChild([\n            { path: '', component: AccountComponent },\n        ])\n    ],\n    declarations: [\n        AccountComponent,\n        EmailFormComponent,\n        PasswordFormComponent,\n        FormCardComponent,\n        DeleteAccountComponent\n    ],\n    entryComponents: [DeleteAccountComponent]\n})\nexport class AccountModule { }\n","// Angular\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-delete-account',\n    template: `\n        <div mat-dialog-title>Confirm Delete</div>\n        <mat-dialog-content>Are you sure you want to delete your account?</mat-dialog-content>\n        <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <button [mat-dialog-close] color=\"warn\" mat-button>Cancel</button>\n            <button [mat-dialog-close]=\"true\" color=\"primary\" mat-button>Confirm</button>\n        </mat-dialog-actions>\n    `,\n    styles: [`\n        mat-dialog-actions {\n            display: flex;\n            justify-content: space-between;\n            place-content: center;\n        }\n    `]\n})\nexport class DeleteAccountComponent { }\n","// Angular\nimport { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'app-email-form',\n    template: `\n        <form #form=\"ngForm\" (ngSubmit)=\"this.saveEmail.emit(this.form)\">\n            <mat-form-field>\n                <input\n                    [(ngModel)]=\"this.email\"\n                    [disabled]=\"this.pending\"\n                    (ngModelChange)=\"this.clearError.emit()\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    autocorrect=\"off\"\n                    autocomplete=\"off\"\n                    matInput\n                    required\n                />\n            </mat-form-field>\n            <button\n                [disabled]=\"this.form.invalid || this.pending\"\n                id=\"save-btn\"\n                type=\"submit\"\n                color=\"primary\"\n                mat-icon-button\n            >\n                <mat-icon>save</mat-icon>\n            </button>\n        </form>\n    `,\n    styles: [`\n        form {\n            display: flex;\n            flex-direction: row;\n        }\n        p {\n            text-align: center;\n            color: #F44336;\n        }\n        mat-form-field {\n            width: 100%;\n        }\n    `],\n})\nexport class EmailFormComponent {\n    email: string;\n\n    @Input() pending: boolean;\n\n    @Output() saveEmail = new EventEmitter();\n    @Output() clearError = new EventEmitter();\n\n    @ViewChild('form') form: NgForm;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-form-card',\n    template: `\n        <mat-card>\n            <mat-card-title>Update Account</mat-card-title>\n            <ng-content></ng-content>\n        </mat-card>\n    `,\n    styles: [`\n        :host {\n            position: fixed;\n            width: 100%;\n            top: 64px;\n            bottom: 0px;\n            left: 0px;\n            right: 0px;\n            background: #eee;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            place-items: center;\n        }\n        mat-card {\n            width: 280px;\n            margin: 0px 8px 64px;\n        }\n    `]\n})\nexport class FormCardComponent { }\n","// Angular\nimport { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'app-password-form',\n    template: `\n        <form #form=\"ngForm\" (ngSubmit)=\"this.savePassword.emit(this.form)\">\n            <mat-form-field>\n                <input\n                    [(ngModel)]=\"this.password\"\n                    [disabled]=\"this.pending\"\n                    (ngModelChange)=\"this.clearError.emit()\"\n                    type=\"text\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    autocorrect=\"off\"\n                    autocomplete=\"off\"\n                    matInput\n                    required\n                />\n            </mat-form-field>\n            <button\n                [disabled]=\"this.form.invalid || this.pending\"\n                id=\"password-btn\"\n                type=\"submit\"\n                color=\"primary\"\n                mat-icon-button\n            >\n                <mat-icon>save</mat-icon>\n            </button>\n        </form>\n    `,\n    styles: [`\n        form {\n            display: flex;\n            flex-direction: row;\n        }\n        p {\n            text-align: center;\n            color: #F44336;\n        }\n        mat-form-field {\n            width: 100%;\n        }\n    `],\n})\nexport class PasswordFormComponent {\n    password: string;\n\n    @Input() pending: boolean;\n\n    @Output() savePassword = new EventEmitter();\n    @Output() clearError = new EventEmitter();\n\n    @ViewChild('form') form: NgForm;\n}\n","// Angular\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { NgForm } from '@angular/forms';\n// rxjs\nimport { Subject } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\n// Shared\nimport { NgFireService } from '@shared/services';\n// Module Components\nimport { DeleteAccountComponent } from '../delete-account/delete-account.component';\n\n@Injectable()\nexport class AccountService {\n    error$ = new Subject<string>();\n    pending$ = new Subject<boolean>();\n\n    constructor(\n        private matDialog: MatDialog,\n        private angularFireAuth: AngularFireAuth,\n        private ngFireService: NgFireService\n    ) { }\n\n    saveEmail(form: NgForm) {\n        this.pending$.next(true);\n        this.angularFireAuth.auth.currentUser.updateEmail(form.value.email)\n        .then(_ => {\n            this.pending$.next(false);\n            form.resetForm();\n        })\n        .catch(error => {\n            this.pending$.next(false);\n            this.error$.next(error);\n        });\n    }\n\n    savePassword(form: NgForm) {\n        this.pending$.next(true);\n        this.angularFireAuth.auth.currentUser.updatePassword(form.value.password)\n        .then(_ => {\n            this.pending$.next(false);\n            form.resetForm();\n        })\n        .catch(error => {\n            this.pending$.next(false);\n            this.error$.next(error);\n        });\n    }\n\n    deleteAccount() {\n        this.matDialog.open(DeleteAccountComponent, { width: '280px' })\n        .afterClosed()\n        .subscribe(confirm => {\n            if (confirm) {\n                this.pending$.next(true);\n                this.ngFireService.delete('users', this.angularFireAuth.auth.currentUser.uid)\n                .then(_ => {\n                    this.pending$.next(false);\n                    this.angularFireAuth.auth.signOut();\n                })\n                .catch(error => {\n                    this.pending$.next(false);\n                    this.error$.next(error);\n                });\n            }\n        });\n    }\n}\n"],"sourceRoot":""}