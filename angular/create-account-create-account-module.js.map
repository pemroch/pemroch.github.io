{"version":3,"sources":["webpack:///./src/app/create-account/create-account.component.ts","webpack:///./src/app/create-account/create-account.module.ts","webpack:///./src/app/create-account/create-account.service.ts","webpack:///./src/app/create-account/form-card/form-card.component.ts","webpack:///./src/app/create-account/form/form.component.ts","webpack:///./src/app/create-account/tool-bar/tool-bar.component.ts"],"names":[],"mappings":"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","file":"create-account-create-account-module.js","sourcesContent":["import { Component } from '@angular/core';\n\nimport { CreateAccountService } from './create-account.service';\n\n@Component({\n    selector: 'app-create-account',\n    template: `\n        <app-tool-bar></app-tool-bar>\n        <app-form-card>\n            <app-form\n                [error]=\"this.createAccountService.error$ | async\"\n                [pending]=\"this.createAccountService.pending$ | async\"\n                (createAccount)=\"this.createAccountService.createAccount($event)\"\n                (clearError)=\"this.createAccountService.error$.next('')\"\n            ></app-form>\n        </app-form-card>\n    `,\n    providers: [CreateAccountService]\n})\nexport class CreateAccountComponent {\n    constructor(public createAccountService: CreateAccountService) { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatSnackBarModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { CreateAccountComponent } from './create-account.component';\nimport { ToolBarComponent } from './tool-bar/tool-bar.component';\nimport { FormComponent } from './form/form.component';\nimport { FormCardComponent } from './form-card/form-card.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatDialogModule,\n        MatInputModule,\n        MatToolbarModule,\n        MatSnackBarModule,\n        RouterModule.forChild([\n            { path: '', component: CreateAccountComponent },\n        ])\n    ],\n    declarations: [\n        CreateAccountComponent,\n        ToolBarComponent,\n        FormComponent,\n        FormCardComponent\n    ]\n})\nexport class CreateAccountModule { }\n","import { Injectable } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nimport { Subject } from 'rxjs';\n\nimport { NgFireService } from '@shared/services';\n\n@Injectable()\nexport class CreateAccountService {\n    error$ = new Subject<string>();\n    pending$ = new Subject<boolean>();\n\n    constructor(\n        private router: Router,\n        private angularFireAuth: AngularFireAuth,\n        private ngFireService: NgFireService,\n    ) { }\n\n    clearError() {\n        this.error$.next('');\n    }\n\n    createAccount(form: NgForm) {\n        this.pending$.next(true);\n        this.angularFireAuth.auth.createUserWithEmailAndPassword(form.value.email, form.value.password)\n        .then(() => {\n            this.angularFireAuth.auth.signInWithEmailAndPassword(form.value.email, form.value.password)\n            .then(userData => {\n                this.ngFireService.set('users', userData.user.uid, {\n                    email: userData.user.email,\n                    language: 'en',\n                    uid: userData.user.uid\n                })\n                .catch(error => {\n                    this.pending$.next(false);\n                    this.error$.next(error);\n                });\n            });\n        })\n        .catch(error => {\n            this.pending$.next(false);\n            this.error$.next(error);\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-form-card',\n    template: `\n        <mat-card>\n            <mat-card-title>Create Account</mat-card-title>\n            <ng-content></ng-content>\n        </mat-card>\n    `,\n    styles: [`\n        :host {\n            position: fixed;\n            width: 100%;\n            top: 64px;\n            bottom: 0px;\n            left: 0px;\n            right: 0px;\n            background: #eee;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            place-items: center;\n        }\n        mat-card {\n            width: 280px;\n            margin: 0px 8px 64px;\n        }\n    `]\n})\nexport class FormCardComponent { }\n","// Angular\nimport { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'app-form',\n    template: `\n        <form #form=\"ngForm\" (ngSubmit)=\"this.createAccount.emit(this.form)\">\n            <mat-form-field>\n                <input\n                    [(ngModel)]=\"this.email\"\n                    [disabled]=\"this.pending\"\n                    (ngModelChange)=\"this.clearError.emit()\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    autocorrect=\"off\"\n                    autocomplete=\"off\"\n                    matInput\n                    required\n                />\n            </mat-form-field>\n            <mat-form-field>\n                <input\n                    [(ngModel)]=\"this.password\"\n                    [disabled]=\"this.pending\"\n                    (ngModelChange)=\"this.clearError.emit()\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    autocorrect=\"off\"\n                    autocomplete=\"off\"\n                    matInput\n                    required\n                />\n            </mat-form-field>\n            <p class=\"mat-caption\">{{ this.error }}</p>\n            <button\n                [disabled]=\"this.form.invalid || this.pending\"\n                id=\"create-account-btn\"\n                type=\"submit\"\n                color=\"primary\"\n                mat-raised-button\n            >\n                Create Account\n            </button>\n        </form>\n    `,\n    styles: [`\n        app-form-card {\n            width: 280px;\n            margin: 0px 8px 64px;\n        }\n        form {\n            text-align: right;\n        }\n        p {\n            text-align: center;\n            color: #F44336;\n        }\n        mat-form-field,\n        #create-account-btn {\n            width: 100%;\n            margin-top: 16px;\n        }\n    `],\n})\nexport class FormComponent {\n    @Input() error: string;\n    @Input() pending: boolean;\n\n    @Output() createAccount = new EventEmitter();\n    @Output() clearError = new EventEmitter();\n\n    @ViewChild('form') form: NgForm;\n}\n","// Angular\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-tool-bar',\n    template: `\n        <mat-toolbar style=\"height: 64px\" color=\"primary\">\n            <span>Click Wik</span>\n            <span id=\"spacer\"></span>\n            <button routerLink=\"/login\" mat-button>Login</button>\n        </mat-toolbar>\n    `,\n    styles: [`\n        #spacer {\n            display: flex;\n            flex: 1;\n        }\n    `]\n})\nexport class ToolBarComponent { }\n"],"sourceRoot":""}